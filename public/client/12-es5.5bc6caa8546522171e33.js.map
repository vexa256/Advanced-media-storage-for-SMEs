{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/stepper.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/stepper.js","webpack:///src/common/billing/subscriptions/subscription-stepper-state.service.ts","webpack:///src/common/billing/subscriptions/paypal-subscriptions.ts","webpack:///src/common/billing/upgrade-page/upgrade-page.component.html","webpack:///src/common/billing/upgrade-page/upgrade-page.component.ts","webpack:///src/common/billing/upgrade-page/billing-plans-resolver.service.ts","webpack:///src/common/billing/upgrade-page/accepted-payments-header/accepted-payments-header.component.html","webpack:///src/common/billing/upgrade-page/accepted-payments-header/accepted-payments-header.component.ts","webpack:///src/common/billing/upgrade-page/plan-features-list/plan-features-list.component.html","webpack:///src/common/billing/upgrade-page/plan-features-list/plan-features-list.component.ts","webpack:///src/common/billing/upgrade-page/upgrade-page-aside/upgrade-page-aside.component.html","webpack:///src/common/billing/upgrade-page/upgrade-page-aside/upgrade-page-aside.component.ts","webpack:///src/common/billing/upgrade-page/order-summary/order-summary.component.html","webpack:///src/common/billing/upgrade-page/order-summary/order-summary.component.ts","webpack:///src/common/billing/credit-card-form/credit-card-form.component.html","webpack:///src/common/billing/credit-card-form/credit-card-form.component.ts","webpack:///src/common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component.html","webpack:///src/common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component.ts","webpack:///src/common/billing/subscriptions/user-subscription-page/user-subscription-page.component.html","webpack:///src/common/billing/subscriptions/user-subscription-page/user-subscription-page.component.ts","webpack:///src/common/billing/guards/user-subscribed-guard.service.ts","webpack:///src/common/billing/upgrade-page/currencies-list-resolver.service.ts","webpack:///src/common/billing/invoices/invoice.service.ts","webpack:///src/common/billing/invoices/invoice-index/invoice-index.component.html","webpack:///src/common/billing/invoices/invoice-index/invoice-index.component.ts","webpack:///src/common/billing/pricing-page/pricing-page.component.ts","webpack:///src/common/billing/guards/redirect-to-upgrade-page.service.ts","webpack:///src/common/billing/billing-routing.module.ts","webpack:///src/common/billing/pricing-page/pricing-page.component.html","webpack:///src/common/billing/plans/select-plan-panel/select-plan-panel.component.html","webpack:///src/common/billing/plans/select-plan-panel/select-plan-panel.component.ts","webpack:///src/common/billing/plans/select-plan-period-panel/select-plan-period-panel.component.html","webpack:///src/common/billing/plans/select-plan-period-panel/select-plan-period-panel.component.ts","webpack:///src/common/billing/upgrade-page/contact-widget/contact-widget.component.ts","webpack:///src/common/billing/guards/user-not-subscribed-guard.service.ts","webpack:///src/common/billing/billing.module.ts","webpack:///src/common/billing/upgrade-page/contact-widget/contact-widget.component.html"],"names":["CdkStep_ng_template_0_Template","rf","ctx","CdkStepLabel","CdkStepHeader","CdkStepperModule","CdkStepperPrevious","CdkStepperNext","CdkStepper","CdkStep","_c0","_elementRef","this","nativeElement","focus","ɵfac","t","ɵdir","type","selectors","hostAttrs","template","nextId","STEPPER_GLOBAL_OPTIONS","_stepper","stepperOptions","interacted","_editable","_optional","_completedOverride","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","_showError","showError","stepControl","valid","invalid","selected","reset","_stateChanged","value","c","_getDefaultCompleted","_getDefaultError","ɵcmp","contentQueries","dirIndex","_t","stepLabel","first","viewQuery","content","inputs","editable","optional","completed","hasError","label","errorMessage","ariaLabel","ariaLabelledby","state","exportAs","features","ngContentSelectors","decls","vars","encapsulation","changeDetection","_dir","_changeDetectorRef","_document","_destroyed","Subject","_linear","_selectedIndex","selectionChange","_orientation","_groupId","_keyManager","_stepHeader","withWrap","withVerticalOrientation","change","of","pipe","startWith","_layoutDirection","takeUntil","subscribe","direction","withHorizontalOrientation","updateActiveItem","steps","changes","Math","max","next","complete","selectedIndex","min","length","_updateSelectedItemIndex","forEach","step","i","markForCheck","index","position","toArray","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","activeItemIndex","newIndex","stepsArray","emit","previouslySelectedIndex","selectedStep","previouslySelectedStep","_containsFocus","setActiveItem","event","hasModifier","keyCode","manager","setFirstItemActive","preventDefault","setLastItemActive","onKeydown","slice","some","control","pending","stepperElement","focusedElement","activeElement","contains","_steps","Error","_anyControlsInvalidOrPending","indexOf","linear","outputs","hostVars","hostBindings","_handleClick","previous","ɵmod","ɵinj","factory","imports","MatStepHeader_ng_container_3_Template","ctx_r0","iconOverrides","_getIconContext","MatStepHeader_ng_container_4_span_1_Template","ctx_r6","_getDefaultTextForState","MatStepHeader_ng_container_4_mat_icon_2_Template","ctx_r7","MatStepHeader_ng_container_4_Template","ctx_r1","MatStepHeader_ng_container_6_Template","ctx_r2","_templateLabel","MatStepHeader_div_7_Template","ctx_r3","MatStepHeader_div_8_Template","ctx_r4","_intl","optionalLabel","MatStepHeader_div_9_Template","ctx_r5","MatStep_ng_template_0_Template","MatHorizontalStepper_ng_container_1_div_2_Template","MatHorizontalStepper_ng_container_1_Template","_r8","$implicit","select","$event","_onKeydown","step_r2","i_r3","isLast_r4","last","_getFocusIndex","_getStepLabelId","_getIndicatorType","_iconOverrides","disableRipple","_getStepContentId","MatHorizontalStepper_div_3_Template","_r12","_animationDone","step_r9","i_r10","_getAnimationDirection","MatVerticalStepper_div_0_Template","_r6","step_r1","i_r2","isLast_r3","MatStepperIntl","MatStepHeader","MatStepperModule","MatVerticalStepper","MatStep","MatStepperIcon","SubscriptionStepperState","PaypalSubscriptions","MatStepLabel","ɵMatStepLabel_BaseFactory","ɵprov","token","providedIn","MAT_STEPPER_INTL_PROVIDER","provide","deps","useFactory","parentIntl","_focusMonitor","changeDetectorRef","super","_intlSubscription","monitor","unsubscribe","stopMonitoring","focusVia","active","consts","_getHostElement","_stringLabel","directives","styles","matStepperAnimations","horizontalStepTransition","transform","visibility","verticalStepTransition","height","templateRef","name","stepper","_errorStateMatcher","form","isErrorState","useExisting","MatStepper","arguments","animationDone","_icons","distinctUntilChanged","x","y","fromState","toState","ɵMatStepper_BaseFactory","MatHorizontalStepper","labelPosition","ɵMatHorizontalStepper_BaseFactory","data","animation","dir","elementRef","MatStepperNext","ɵMatStepperNext_BaseFactory","MatStepperPrevious","ɵMatStepperPrevious_BaseFactory","providers","currentUser","plans","initialPlan$","BehaviorSubject","selectedPlan$","mode","isSubscribed","getSubscription","gateway","plan","children","getChildPlans","radioGroupModel","id","find","parent","filter","parent_id","hidden","http","settings","subscriptions","i18n","popupWidth","popupHeight","popupParams","menubar","location","locationbar","toolbar","titlebar","status","scrollbars","width","subscriptionPending","executingAgreement","params","popup","openPaypalPopup","getBaseUrl","Promise","resolve","reject","rejectSubscribe","resolveSubscribe","createPaypalAgreement","response","listenForMessages","plan_id","href","urls","approve","errResponse","rejectSubscriptionPromise","subscription","cancel","delete","start_date","renews_at","then","user","planId","window","addEventListener","e","origin","executePaypalAgreement","finalize","resolveSubscriptionPromise","errorResponse","url","Object","assign","left","screen","top","newWindow","open","keys","map","key","join","interval","setInterval","closed","clearInterval","post","agreement_id","message","close","loading$","UpgradePageComponent","BillingPlansResolver","Steps","Plans","Period","Payment","route","router","toast","localStorage","paypalSubscriptions","setPlans","hydrateStateFromLocalStorage","storedState","get","initial","initialPlan","p","finalPlan","selectInitialPlan","selectPlanById","changePlan","set","final","navigate","remove","replacements","planName","getSelectedOrParentPlanName","activeSubscription","assignCurrent","selectedPlan","nextStep","all","order","perPage","pagination","catchError","navigateByUrl","mergeMap","AcceptedPaymentsHeaderComponent","el","acceptedCards","getJson","card","getAssetUrl","toLowerCase","PlanFeaturesListComponent","showCheckIcons","dense","UpgradePageAsideComponent","OrderSummaryComponent","CreditCardFormComponent","zone","lazyLoader","theme","created","submitButtonText","showSubmitButton","showOrderSummary","error$","stripeElements","resetForm","initStripe","destroyStripe","error","stripe","createToken","addCardToUser","stripeToken","addCard","loadAsset","Stripe","elements","isDarkMode","selectedTheme$","is_dark","field","create","classes","base","style","color","mount","on","onChange","bind","push","unmount","destroy","run","submitForm","CreateSubscriptionPanelComponent","paypal","selectedIndex$","loading","submitText","disablePaypalTab","startLoading","createOnStripe","getNewSubscriptionPayload","completeSubscription","confirmCardPayment","errors","Default","stopLoading","payment_intent_secret","result","action","onAction","finalizeOnStripe","reference","finalResponse","payload","from","UserSubscriptionPageComponent","UserSubscribedGuard","CurrenciesListResolver","InvoiceService","modal","activeSubscription$","onGracePeriod","ends_at","split","title","body","ok","afterClosed","confirmed","cancelSubscription","resume","setSubscription","request","share","updateUserAndSubscription","valueLists","currencies","toPromise","handle","InvoiceIndexComponent","PricingPageComponent","RedirectToUpgradePage","BillingRoutingModule","invoices","dataSource$","userId","invoice","uuid","routes","path","component","canActivate","listener","isLoggedIn","canActivateChild","forChild","SelectPlanPanelComponent","hasRecommendedPlan","recommended","setTimeout","ContactWidgetComponent","UserNotSubscribedGuard","SelectPlanPeriodPanelComponent","BillingModule","showSidebar","baseAmount","getAmountPerDay","amount","ceil","days","interval_count"],"mappings":"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","file":"x","sourcesContent":["import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER, HOME, END } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, TemplateRef, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, forwardRef, Optional, ContentChild, ViewChild, Input, EventEmitter, ChangeDetectorRef, ContentChildren, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nlet CdkStepHeader = /** @class */ (() => {\n    class CdkStepHeader {\n        constructor(_elementRef) {\n            this._elementRef = _elementRef;\n        }\n        /** Focuses the step header. */\n        focus() {\n            this._elementRef.nativeElement.focus();\n        }\n    }\nCdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) { return new (t || CdkStepHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkStepHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepHeader, selectors: [[\"\", \"cdkStepHeader\", \"\"]], hostAttrs: [\"role\", \"tab\"] });\n    CdkStepHeader.ctorParameters = () => [\n        { type: ElementRef }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepHeader, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepHeader]',\n                host: {\n                    'role': 'tab'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n    return CdkStepHeader;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet CdkStepLabel = /** @class */ (() => {\n    class CdkStepLabel {\n        constructor(/** @docs-private */ template) {\n            this.template = template;\n        }\n    }\nCdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) { return new (t || CdkStepLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepLabel, selectors: [[\"\", \"cdkStepLabel\", \"\"]] });\n    CdkStepLabel.ctorParameters = () => [\n        { type: TemplateRef }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepLabel]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n    return CdkStepLabel;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error'\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * @breaking-change 8.0.0.\n */\nconst MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\nlet CdkStep = /** @class */ (() => {\n    class CdkStep {\n        /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n        constructor(_stepper, stepperOptions) {\n            this._stepper = _stepper;\n            /** Whether user has seen the expanded step content or not. */\n            this.interacted = false;\n            this._editable = true;\n            this._optional = false;\n            this._completedOverride = null;\n            this._customError = null;\n            this._stepperOptions = stepperOptions ? stepperOptions : {};\n            this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n            this._showError = !!this._stepperOptions.showError;\n        }\n        /** Whether the user can return to this step once it has been marked as completed. */\n        get editable() {\n            return this._editable;\n        }\n        set editable(value) {\n            this._editable = coerceBooleanProperty(value);\n        }\n        /** Whether the completion of step is optional. */\n        get optional() {\n            return this._optional;\n        }\n        set optional(value) {\n            this._optional = coerceBooleanProperty(value);\n        }\n        /** Whether step is marked as completed. */\n        get completed() {\n            return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n        }\n        set completed(value) {\n            this._completedOverride = coerceBooleanProperty(value);\n        }\n        _getDefaultCompleted() {\n            return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n        }\n        /** Whether step has an error. */\n        get hasError() {\n            return this._customError == null ? this._getDefaultError() : this._customError;\n        }\n        set hasError(value) {\n            this._customError = coerceBooleanProperty(value);\n        }\n        _getDefaultError() {\n            return this.stepControl && this.stepControl.invalid && this.interacted;\n        }\n        /** Selects this step component. */\n        select() {\n            this._stepper.selected = this;\n        }\n        /** Resets the step to its initial state. Note that this includes resetting form data. */\n        reset() {\n            this.interacted = false;\n            if (this._completedOverride != null) {\n                this._completedOverride = false;\n            }\n            if (this._customError != null) {\n                this._customError = false;\n            }\n            if (this.stepControl) {\n                this.stepControl.reset();\n            }\n        }\n        ngOnChanges() {\n            // Since basically all inputs of the MatStep get proxied through the view down to the\n            // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n            this._stepper._stateChanged();\n        }\n    }\nCdkStep.ɵfac = function CdkStep_Factory(t) { return new (t || CdkStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => CdkStepper)), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nCdkStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkStep, selectors: [[\"cdk-step\"]], contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepLabel, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, viewQuery: function CdkStep_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    } }, inputs: { editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\", stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\" }, exportAs: [\"cdkStep\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function CdkStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\n    CdkStep.ctorParameters = () => [\n        { type: CdkStepper, decorators: [{ type: Inject, args: [forwardRef(() => CdkStepper),] }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n    ];\n    CdkStep.propDecorators = {\n        stepLabel: [{ type: ContentChild, args: [CdkStepLabel,] }],\n        content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n        stepControl: [{ type: Input }],\n        label: [{ type: Input }],\n        errorMessage: [{ type: Input }],\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n        state: [{ type: Input }],\n        editable: [{ type: Input }],\n        optional: [{ type: Input }],\n        completed: [{ type: Input }],\n        hasError: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStep, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-step',\n                exportAs: 'cdkStep',\n                template: '<ng-template><ng-content></ng-content></ng-template>',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: CdkStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => CdkStepper)]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { editable: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], completed: [{\n            type: Input\n        }], hasError: [{\n            type: Input\n        }], stepLabel: [{\n            type: ContentChild,\n            args: [CdkStepLabel]\n        }], content: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], stepControl: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], state: [{\n            type: Input\n        }] }); })();\n    return CdkStep;\n})();\nlet CdkStepper = /** @class */ (() => {\n    class CdkStepper {\n        constructor(_dir, _changeDetectorRef, \n        // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\n        _elementRef, _document) {\n            this._dir = _dir;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._elementRef = _elementRef;\n            /** Emits when the component is destroyed. */\n            this._destroyed = new Subject();\n            this._linear = false;\n            this._selectedIndex = 0;\n            /** Event emitted when the selected step has changed. */\n            this.selectionChange = new EventEmitter();\n            this._orientation = 'horizontal';\n            this._groupId = nextId++;\n            this._document = _document;\n        }\n        /** The list of step components that the stepper is holding. */\n        get steps() {\n            return this._steps;\n        }\n        /** Whether the validity of previous steps should be checked or not. */\n        get linear() {\n            return this._linear;\n        }\n        set linear(value) {\n            this._linear = coerceBooleanProperty(value);\n        }\n        /** The index of the selected step. */\n        get selectedIndex() {\n            return this._selectedIndex;\n        }\n        set selectedIndex(index) {\n            const newIndex = coerceNumberProperty(index);\n            if (this.steps) {\n                // Ensure that the index can't be out of bounds.\n                if (newIndex < 0 || newIndex > this.steps.length - 1) {\n                    throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n                }\n                if (this._selectedIndex != newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n                    (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                    this._updateSelectedItemIndex(index);\n                }\n            }\n            else {\n                this._selectedIndex = newIndex;\n            }\n        }\n        /** The step that is selected. */\n        get selected() {\n            // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n            return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n        }\n        set selected(step) {\n            this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n        }\n        ngAfterViewInit() {\n            // Note that while the step headers are content children by default, any components that\n            // extend this one might have them as view children. We initialize the keyboard handling in\n            // AfterViewInit so we're guaranteed for both view and content children to be defined.\n            this._keyManager = new FocusKeyManager(this._stepHeader)\n                .withWrap()\n                .withVerticalOrientation(this._orientation === 'vertical');\n            (this._dir ? this._dir.change : of())\n                .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n                .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n            this._keyManager.updateActiveItem(this._selectedIndex);\n            this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (!this.selected) {\n                    this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n                }\n            });\n        }\n        ngOnDestroy() {\n            this._destroyed.next();\n            this._destroyed.complete();\n        }\n        /** Selects and focuses the next step in list. */\n        next() {\n            this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n        }\n        /** Selects and focuses the previous step in list. */\n        previous() {\n            this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n        }\n        /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n        reset() {\n            this._updateSelectedItemIndex(0);\n            this.steps.forEach(step => step.reset());\n            this._stateChanged();\n        }\n        /** Returns a unique id for each step label element. */\n        _getStepLabelId(i) {\n            return `cdk-step-label-${this._groupId}-${i}`;\n        }\n        /** Returns unique id for each step content element. */\n        _getStepContentId(i) {\n            return `cdk-step-content-${this._groupId}-${i}`;\n        }\n        /** Marks the component to be change detected. */\n        _stateChanged() {\n            this._changeDetectorRef.markForCheck();\n        }\n        /** Returns position state of the step with the given index. */\n        _getAnimationDirection(index) {\n            const position = index - this._selectedIndex;\n            if (position < 0) {\n                return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n            }\n            else if (position > 0) {\n                return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n            }\n            return 'current';\n        }\n        /** Returns the type of icon to be displayed. */\n        _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n            const step = this.steps.toArray()[index];\n            const isCurrentStep = this._isCurrentStep(index);\n            return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n                this._getGuidelineLogic(step, isCurrentStep, state);\n        }\n        _getDefaultIndicatorLogic(step, isCurrentStep) {\n            if (step._showError && step.hasError && !isCurrentStep) {\n                return STEP_STATE.ERROR;\n            }\n            else if (!step.completed || isCurrentStep) {\n                return STEP_STATE.NUMBER;\n            }\n            else {\n                return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n            }\n        }\n        _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n            if (step._showError && step.hasError && !isCurrentStep) {\n                return STEP_STATE.ERROR;\n            }\n            else if (step.completed && !isCurrentStep) {\n                return STEP_STATE.DONE;\n            }\n            else if (step.completed && isCurrentStep) {\n                return state;\n            }\n            else if (step.editable && isCurrentStep) {\n                return STEP_STATE.EDIT;\n            }\n            else {\n                return state;\n            }\n        }\n        _isCurrentStep(index) {\n            return this._selectedIndex === index;\n        }\n        /** Returns the index of the currently-focused step header. */\n        _getFocusIndex() {\n            return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n        }\n        _updateSelectedItemIndex(newIndex) {\n            const stepsArray = this.steps.toArray();\n            this.selectionChange.emit({\n                selectedIndex: newIndex,\n                previouslySelectedIndex: this._selectedIndex,\n                selectedStep: stepsArray[newIndex],\n                previouslySelectedStep: stepsArray[this._selectedIndex],\n            });\n            // If focus is inside the stepper, move it to the next header, otherwise it may become\n            // lost when the active step content is hidden. We can't be more granular with the check\n            // (e.g. checking whether focus is inside the active step), because we don't have a\n            // reference to the elements that are rendering out the content.\n            this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n                this._keyManager.updateActiveItem(newIndex);\n            this._selectedIndex = newIndex;\n            this._stateChanged();\n        }\n        _onKeydown(event) {\n            const hasModifier = hasModifierKey(event);\n            const keyCode = event.keyCode;\n            const manager = this._keyManager;\n            if (manager.activeItemIndex != null && !hasModifier &&\n                (keyCode === SPACE || keyCode === ENTER)) {\n                this.selectedIndex = manager.activeItemIndex;\n                event.preventDefault();\n            }\n            else if (keyCode === HOME) {\n                manager.setFirstItemActive();\n                event.preventDefault();\n            }\n            else if (keyCode === END) {\n                manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n        }\n        _anyControlsInvalidOrPending(index) {\n            const steps = this.steps.toArray();\n            steps[this._selectedIndex].interacted = true;\n            if (this._linear && index >= 0) {\n                return steps.slice(0, index).some(step => {\n                    const control = step.stepControl;\n                    const isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n                    return isIncomplete && !step.optional && !step._completedOverride;\n                });\n            }\n            return false;\n        }\n        _layoutDirection() {\n            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n        }\n        /** Checks whether the stepper contains the focused element. */\n        _containsFocus() {\n            if (!this._document || !this._elementRef) {\n                return false;\n            }\n            const stepperElement = this._elementRef.nativeElement;\n            const focusedElement = this._document.activeElement;\n            return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n        }\n    }\nCdkStepper.ɵfac = function CdkStepper_Factory(t) { return new (t || CdkStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepper, selectors: [[\"\", \"cdkStepper\", \"\"]], contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStep, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"cdkStepper\"] });\n    CdkStepper.ctorParameters = () => [\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ChangeDetectorRef },\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ];\n    CdkStepper.propDecorators = {\n        _steps: [{ type: ContentChildren, args: [CdkStep, { descendants: true },] }],\n        _stepHeader: [{ type: ContentChildren, args: [CdkStepHeader, { descendants: true },] }],\n        linear: [{ type: Input }],\n        selectedIndex: [{ type: Input }],\n        selected: [{ type: Input }],\n        selectionChange: [{ type: Output }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepper, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepper]',\n                exportAs: 'cdkStepper'\n            }]\n    }], function () { return [{ type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], linear: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], _steps: [{\n            type: ContentChildren,\n            args: [CdkStep, { descendants: true }]\n        }], _stepHeader: [{\n            type: ContentChildren,\n            args: [CdkStepHeader, { descendants: true }]\n        }] }); })();\n    return CdkStepper;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nlet CdkStepperNext = /** @class */ (() => {\n    class CdkStepperNext {\n        constructor(_stepper) {\n            this._stepper = _stepper;\n            /** Type of the next button. Defaults to \"submit\" if not specified. */\n            this.type = 'submit';\n        }\n        // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n        // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n        // ViewEngine they're overwritten.\n        // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n        // tslint:disable-next-line:no-host-decorator-in-concrete\n        _handleClick() {\n            this._stepper.next();\n        }\n    }\nCdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) { return new (t || CdkStepperNext)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperNext, selectors: [[\"button\", \"cdkStepperNext\", \"\"]], hostVars: 1, hostBindings: function CdkStepperNext_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\n    CdkStepperNext.ctorParameters = () => [\n        { type: CdkStepper }\n    ];\n    CdkStepperNext.propDecorators = {\n        type: [{ type: Input }],\n        _handleClick: [{ type: HostListener, args: ['click',] }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperNext]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\n    return CdkStepperNext;\n})();\n/** Button that moves to the previous step in a stepper workflow. */\nlet CdkStepperPrevious = /** @class */ (() => {\n    class CdkStepperPrevious {\n        constructor(_stepper) {\n            this._stepper = _stepper;\n            /** Type of the previous button. Defaults to \"button\" if not specified. */\n            this.type = 'button';\n        }\n        // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n        // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n        // ViewEngine they're overwritten.\n        // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n        // tslint:disable-next-line:no-host-decorator-in-concrete\n        _handleClick() {\n            this._stepper.previous();\n        }\n    }\nCdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) { return new (t || CdkStepperPrevious)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperPrevious, selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\n    CdkStepperPrevious.ctorParameters = () => [\n        { type: CdkStepper }\n    ];\n    CdkStepperPrevious.propDecorators = {\n        type: [{ type: Input }],\n        _handleClick: [{ type: HostListener, args: ['click',] }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\n    return CdkStepperPrevious;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet CdkStepperModule = /** @class */ (() => {\n    class CdkStepperModule {\n    }\nCdkStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkStepperModule });\nCdkStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkStepperModule_Factory(t) { return new (t || CdkStepperModule)(); }, imports: [[BidiModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkStepperModule, { declarations: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; }, imports: function () { return [BidiModule]; }, exports: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ],\n                declarations: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ]\n            }]\n    }], null, null); })();\n    return CdkStepperModule;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, MAT_STEPPER_GLOBAL_OPTIONS, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n\n//# sourceMappingURL=stepper.js.map","import { PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Directive, ɵɵdefineInjectable, Injectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Input, TemplateRef, Inject, forwardRef, ContentChild, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/material/icon';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nfunction MatStepHeader_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 9);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconOverrides[ctx_r0.state])(\"ngTemplateOutletContext\", ctx_r0._getIconContext());\n} }\nfunction MatStepHeader_ng_container_4_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6._getDefaultTextForState(ctx_r6.state));\n} }\nfunction MatStepHeader_ng_container_4_mat_icon_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7._getDefaultTextForState(ctx_r7.state));\n} }\nfunction MatStepHeader_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 10);\n    ɵngcc0.ɵɵtemplate(1, MatStepHeader_ng_container_4_span_1_Template, 2, 1, \"span\", 11);\n    ɵngcc0.ɵɵtemplate(2, MatStepHeader_ng_container_4_mat_icon_2_Template, 2, 1, \"mat-icon\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r1.state);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"number\");\n} }\nfunction MatStepHeader_ng_container_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 13);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2._templateLabel().template);\n} }\nfunction MatStepHeader_div_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.label);\n} }\nfunction MatStepHeader_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._intl.optionalLabel);\n} }\nfunction MatStepHeader_div_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.errorMessage);\n} }\nfunction MatStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatHorizontalStepper_ng_container_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 6);\n} }\nfunction MatHorizontalStepper_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_click_1_listener() { const step_r2 = ctx.$implicit; return step_r2.select(); })(\"keydown\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(2, MatHorizontalStepper_ng_container_1_div_2_Template, 1, 0, \"div\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const step_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const isLast_r4 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() === i_r3 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r3))(\"index\", i_r3)(\"state\", ctx_r0._getIndicatorType(i_r3, step_r2.state))(\"label\", step_r2.stepLabel || step_r2.label)(\"selected\", ctx_r0.selectedIndex === i_r3)(\"active\", step_r2.completed || ctx_r0.selectedIndex === i_r3 || !ctx_r0.linear)(\"optional\", step_r2.optional)(\"errorMessage\", step_r2.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r3 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r3))(\"aria-selected\", ctx_r0.selectedIndex == i_r3)(\"aria-label\", step_r2.ariaLabel || null)(\"aria-labelledby\", !step_r2.ariaLabel && step_r2.ariaLabelledby ? step_r2.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !isLast_r4);\n} }\nfunction MatHorizontalStepper_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatHorizontalStepper_div_3_Template_div_animation_stepTransition_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11._animationDone.next($event); });\n    ɵngcc0.ɵɵelementContainer(1, 8);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r1._getAnimationDirection(i_r10))(\"id\", ctx_r1._getStepContentId(i_r10));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r1.selectedIndex === i_r10 ? 0 : null)(\"aria-labelledby\", ctx_r1._getStepLabelId(i_r10))(\"aria-expanded\", ctx_r1.selectedIndex === i_r10);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r9.content);\n} }\nfunction MatVerticalStepper_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatVerticalStepper_div_0_Template_mat_step_header_click_1_listener() { const step_r1 = ctx.$implicit; return step_r1.select(); })(\"keydown\", function MatVerticalStepper_div_0_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatVerticalStepper_div_0_Template_div_animation_stepTransition_done_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._animationDone.next($event); });\n    ɵngcc0.ɵɵelementStart(4, \"div\", 5);\n    ɵngcc0.ɵɵelementContainer(5, 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const isLast_r3 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() == i_r2 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r2))(\"index\", i_r2)(\"state\", ctx_r0._getIndicatorType(i_r2, step_r1.state))(\"label\", step_r1.stepLabel || step_r1.label)(\"selected\", ctx_r0.selectedIndex === i_r2)(\"active\", step_r1.completed || ctx_r0.selectedIndex === i_r2 || !ctx_r0.linear)(\"optional\", step_r1.optional)(\"errorMessage\", step_r1.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r2 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r2))(\"aria-selected\", ctx_r0.selectedIndex === i_r2)(\"aria-label\", step_r1.ariaLabel || null)(\"aria-labelledby\", !step_r1.ariaLabel && step_r1.ariaLabelledby ? step_r1.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-stepper-vertical-line\", !isLast_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r0._getAnimationDirection(i_r2))(\"id\", ctx_r0._getStepContentId(i_r2));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r0.selectedIndex === i_r2 ? 0 : null)(\"aria-labelledby\", ctx_r0._getStepLabelId(i_r2))(\"aria-expanded\", ctx_r0.selectedIndex === i_r2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r1.content);\n} }\nlet MatStepLabel = /** @class */ (() => {\n    class MatStepLabel extends CdkStepLabel {\n    }\nMatStepLabel.ɵfac = function MatStepLabel_Factory(t) { return ɵMatStepLabel_BaseFactory(t || MatStepLabel); };\nMatStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepLabel, selectors: [[\"\", \"matStepLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[matStepLabel]'\n            }]\n    }], null, null); })();\n    return MatStepLabel;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Stepper data that is required for internationalization. */\nlet MatStepperIntl = /** @class */ (() => {\n    class MatStepperIntl {\n        constructor() {\n            /**\n             * Stream that emits whenever the labels here are changed. Use this to notify\n             * components if the labels have changed after initialization.\n             */\n            this.changes = new Subject();\n            /** Label that is rendered below optional steps. */\n            this.optionalLabel = 'Optional';\n        }\n    }\nMatStepperIntl.ɵfac = function MatStepperIntl_Factory(t) { return new (t || MatStepperIntl)(); };\n    MatStepperIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatStepperIntl_Factory() { return new MatStepperIntl(); }, token: MatStepperIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n    return MatStepperIntl;\n})();\n/** @docs-private */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/** @docs-private */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet MatStepHeader = /** @class */ (() => {\n    class MatStepHeader extends CdkStepHeader {\n        constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n            super(_elementRef);\n            this._intl = _intl;\n            this._focusMonitor = _focusMonitor;\n            this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n        }\n        ngAfterViewInit() {\n            this._focusMonitor.monitor(this._elementRef, true);\n        }\n        ngOnDestroy() {\n            this._intlSubscription.unsubscribe();\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        /** Focuses the step header. */\n        focus() {\n            this._focusMonitor.focusVia(this._elementRef, 'program');\n        }\n        /** Returns string label of given step if it is a text label. */\n        _stringLabel() {\n            return this.label instanceof MatStepLabel ? null : this.label;\n        }\n        /** Returns MatStepLabel if the label of given step is a template label. */\n        _templateLabel() {\n            return this.label instanceof MatStepLabel ? this.label : null;\n        }\n        /** Returns the host HTML element. */\n        _getHostElement() {\n            return this._elementRef.nativeElement;\n        }\n        /** Template context variables that are exposed to the `matStepperIcon` instances. */\n        _getIconContext() {\n            return {\n                index: this.index,\n                active: this.active,\n                optional: this.optional\n            };\n        }\n        _getDefaultTextForState(state) {\n            if (state == 'number') {\n                return `${this.index + 1}`;\n            }\n            if (state == 'edit') {\n                return 'create';\n            }\n            if (state == 'error') {\n                return 'warning';\n            }\n            return state;\n        }\n    }\nMatStepHeader.ɵfac = function MatStepHeader_Factory(t) { return new (t || MatStepHeader)(ɵngcc0.ɵɵdirectiveInject(MatStepperIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatStepHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatStepHeader, selectors: [[\"mat-step-header\"]], hostAttrs: [\"role\", \"tab\", 1, \"mat-step-header\", \"mat-focus-indicator\"], inputs: { state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 19, consts: [[\"matRipple\", \"\", 1, \"mat-step-header-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-step-icon-content\", 3, \"ngSwitch\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngSwitchCase\"], [3, \"ngSwitch\", 4, \"ngSwitchDefault\"], [1, \"mat-step-label\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [\"class\", \"mat-step-text-label\", 4, \"ngIf\"], [\"class\", \"mat-step-optional\", 4, \"ngIf\"], [\"class\", \"mat-step-sub-label-error\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"ngTemplateOutlet\"], [1, \"mat-step-text-label\"], [1, \"mat-step-optional\"], [1, \"mat-step-sub-label-error\"]], template: function MatStepHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\");\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, MatStepHeader_ng_container_3_Template, 1, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatStepHeader_ng_container_4_Template, 3, 2, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n        ɵngcc0.ɵɵtemplate(6, MatStepHeader_ng_container_6_Template, 1, 1, \"ng-container\", 5);\n        ɵngcc0.ɵɵtemplate(7, MatStepHeader_div_7_Template, 2, 1, \"div\", 6);\n        ɵngcc0.ɵɵtemplate(8, MatStepHeader_div_8_Template, 2, 1, \"div\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatStepHeader_div_9_Template, 2, 1, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"mat-step-icon-state-\", ctx.state, \" mat-step-icon\");\n        ɵngcc0.ɵɵclassProp(\"mat-step-icon-selected\", ctx.selected);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", !!(ctx.iconOverrides && ctx.iconOverrides[ctx.state]));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-step-label-active\", ctx.active)(\"mat-step-label-selected\", ctx.selected)(\"mat-step-label-error\", ctx.state == \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._templateLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._stringLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.optional && ctx.state != \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.state == \"error\");\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgSwitchDefault, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet, ɵngcc4.MatIcon], styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n    MatStepHeader.ctorParameters = () => [\n        { type: MatStepperIntl },\n        { type: FocusMonitor },\n        { type: ElementRef },\n        { type: ChangeDetectorRef }\n    ];\n    MatStepHeader.propDecorators = {\n        state: [{ type: Input }],\n        label: [{ type: Input }],\n        errorMessage: [{ type: Input }],\n        iconOverrides: [{ type: Input }],\n        index: [{ type: Input }],\n        selected: [{ type: Input }],\n        active: [{ type: Input }],\n        optional: [{ type: Input }],\n        disableRipple: [{ type: Input }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step-header',\n                template: \"<div class=\\\"mat-step-header-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <mat-icon *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <ng-container *ngIf=\\\"_templateLabel()\\\" [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\">\\n  </ng-container>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\",\n                host: {\n                    'class': 'mat-step-header mat-focus-indicator',\n                    'role': 'tab'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: MatStepperIntl }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { state: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], iconOverrides: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], active: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n    return MatStepHeader;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nconst matStepperAnimations = {\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: trigger('stepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        state('current', style({ transform: 'none', visibility: 'visible' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n    ]),\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: trigger('stepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        state('current', style({ height: '*', visibility: 'visible' })),\n        transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Template to be used to override the icons inside the step header.\n */\nlet MatStepperIcon = /** @class */ (() => {\n    class MatStepperIcon {\n        constructor(templateRef) {\n            this.templateRef = templateRef;\n        }\n    }\nMatStepperIcon.ɵfac = function MatStepperIcon_Factory(t) { return new (t || MatStepperIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatStepperIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperIcon, selectors: [[\"ng-template\", \"matStepperIcon\", \"\"]], inputs: { name: [\"matStepperIcon\", \"name\"] } });\n    MatStepperIcon.ctorParameters = () => [\n        { type: TemplateRef }\n    ];\n    MatStepperIcon.propDecorators = {\n        name: [{ type: Input, args: ['matStepperIcon',] }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matStepperIcon]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { name: [{\n            type: Input,\n            args: ['matStepperIcon']\n        }] }); })();\n    return MatStepperIcon;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet MatStep = /** @class */ (() => {\n    class MatStep extends CdkStep {\n        /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n        constructor(stepper, _errorStateMatcher, stepperOptions) {\n            super(stepper, stepperOptions);\n            this._errorStateMatcher = _errorStateMatcher;\n        }\n        /** Custom error state matcher that additionally checks for validity of interacted form. */\n        isErrorState(control, form) {\n            const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n            // Custom error state checks for the validity of form that is not submitted or touched\n            // since user can trigger a form change by calling for another step without directly\n            // interacting with the current form.\n            const customErrorState = !!(control && control.invalid && this.interacted);\n            return originalErrorState || customErrorState;\n        }\n    }\nMatStep.ɵfac = function MatStep_Factory(t) { return new (t || MatStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatStepper)), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher, 4), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nMatStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatStep, selectors: [[\"mat-step\"]], contentQueries: function MatStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepLabel, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, exportAs: [\"matStep\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\n    MatStep.ctorParameters = () => [\n        { type: MatStepper, decorators: [{ type: Inject, args: [forwardRef(() => MatStepper),] }] },\n        { type: ErrorStateMatcher, decorators: [{ type: SkipSelf }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n    ];\n    MatStep.propDecorators = {\n        stepLabel: [{ type: ContentChild, args: [MatStepLabel,] }]\n    };\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStep, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\\n\",\n                providers: [\n                    { provide: ErrorStateMatcher, useExisting: MatStep },\n                    { provide: CdkStep, useExisting: MatStep },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matStep',\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatStepper)]\n            }] }, { type: ɵngcc2.ErrorStateMatcher, decorators: [{\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { stepLabel: [{\n            type: ContentChild,\n            args: [MatStepLabel]\n        }] }); })();\n    return MatStep;\n})();\nlet MatStepper = /** @class */ (() => {\n    class MatStepper extends CdkStepper {\n        constructor() {\n            super(...arguments);\n            /** Event emitted when the current step is done transitioning in. */\n            this.animationDone = new EventEmitter();\n            /** Consumer-specified template-refs to be used to override the header icons. */\n            this._iconOverrides = {};\n            /** Stream of animation `done` events when the body expands/collapses. */\n            this._animationDone = new Subject();\n        }\n        ngAfterContentInit() {\n            this._icons.forEach(({ name, templateRef }) => this._iconOverrides[name] = templateRef);\n            // Mark the component for change detection whenever the content children query changes\n            this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._stateChanged();\n            });\n            this._animationDone.pipe(\n            // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n            // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n            // See https://github.com/angular/angular/issues/24084\n            distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState), takeUntil(this._destroyed)).subscribe(event => {\n                if (event.toState === 'current') {\n                    this.animationDone.emit();\n                }\n            });\n        }\n    }\nMatStepper.ɵfac = function MatStepper_Factory(t) { return ɵMatStepper_BaseFactory(t || MatStepper); };\nMatStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepper, selectors: [[\"\", \"matStepper\", \"\"]], contentQueries: function MatStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStep, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepperIcon, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icons = _t);\n    } }, viewQuery: function MatStepper_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatStepHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { disableRipple: \"disableRipple\" }, outputs: { animationDone: \"animationDone\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkStepper, useExisting: MatStepper }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n    MatStepper.propDecorators = {\n        _stepHeader: [{ type: ViewChildren, args: [MatStepHeader,] }],\n        _steps: [{ type: ContentChildren, args: [MatStep, { descendants: true },] }],\n        _icons: [{ type: ContentChildren, args: [MatStepperIcon, { descendants: true },] }],\n        animationDone: [{ type: Output }],\n        disableRipple: [{ type: Input }]\n    };\nconst ɵMatStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepper);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepper, [{\n        type: Directive,\n        args: [{ selector: '[matStepper]', providers: [{ provide: CdkStepper, useExisting: MatStepper }] }]\n    }], null, { animationDone: [{\n            type: Output\n        }], _stepHeader: [{\n            type: ViewChildren,\n            args: [MatStepHeader]\n        }], _steps: [{\n            type: ContentChildren,\n            args: [MatStep, { descendants: true }]\n        }], _icons: [{\n            type: ContentChildren,\n            args: [MatStepperIcon, { descendants: true }]\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n    return MatStepper;\n})();\nlet MatHorizontalStepper = /** @class */ (() => {\n    class MatHorizontalStepper extends MatStepper {\n        constructor() {\n            super(...arguments);\n            /** Whether the label should display in bottom or end position. */\n            this.labelPosition = 'end';\n        }\n    }\nMatHorizontalStepper.ɵfac = function MatHorizontalStepper_Factory(t) { return ɵMatHorizontalStepper_BaseFactory(t || MatHorizontalStepper); };\nMatHorizontalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHorizontalStepper, selectors: [[\"mat-horizontal-stepper\"]], hostAttrs: [\"aria-orientation\", \"horizontal\", \"role\", \"tablist\", 1, \"mat-stepper-horizontal\"], hostVars: 4, hostBindings: function MatHorizontalStepper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-stepper-label-position-end\", ctx.labelPosition == \"end\")(\"mat-stepper-label-position-bottom\", ctx.labelPosition == \"bottom\");\n    } }, inputs: { selectedIndex: \"selectedIndex\", labelPosition: \"labelPosition\" }, exportAs: [\"matHorizontalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatHorizontalStepper },\n            { provide: CdkStepper, useExisting: MatHorizontalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 2, consts: [[1, \"mat-horizontal-stepper-header-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-content-container\"], [\"class\", \"mat-horizontal-stepper-content\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [\"class\", \"mat-stepper-horizontal-line\", 4, \"ngIf\"], [1, \"mat-stepper-horizontal-line\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\"], [3, \"ngTemplateOutlet\"]], template: function MatHorizontalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatHorizontalStepper_ng_container_1_Template, 3, 18, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatHorizontalStepper_div_3_Template, 2, 6, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet], styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], encapsulation: 2, data: { animation: [matStepperAnimations.horizontalStepTransition] }, changeDetection: 0 });\n    MatHorizontalStepper.propDecorators = {\n        labelPosition: [{ type: Input }]\n    };\nconst ɵMatHorizontalStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHorizontalStepper);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHorizontalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-horizontal-stepper',\n                exportAs: 'matHorizontalStepper',\n                template: \"<div class=\\\"mat-horizontal-stepper-header-container\\\">\\n  <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n    <mat-step-header class=\\\"mat-horizontal-stepper-header\\\"\\n                     (click)=\\\"step.select()\\\"\\n                     (keydown)=\\\"_onKeydown($event)\\\"\\n                     [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n                     [id]=\\\"_getStepLabelId(i)\\\"\\n                     [attr.aria-posinset]=\\\"i + 1\\\"\\n                     [attr.aria-setsize]=\\\"steps.length\\\"\\n                     [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                     [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n                     [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                     [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                     [index]=\\\"i\\\"\\n                     [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                     [label]=\\\"step.stepLabel || step.label\\\"\\n                     [selected]=\\\"selectedIndex === i\\\"\\n                     [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                     [optional]=\\\"step.optional\\\"\\n                     [errorMessage]=\\\"step.errorMessage\\\"\\n                     [iconOverrides]=\\\"_iconOverrides\\\"\\n                     [disableRipple]=\\\"disableRipple\\\">\\n    </mat-step-header>\\n    <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n  </ng-container>\\n</div>\\n\\n<div class=\\\"mat-horizontal-content-container\\\">\\n  <div *ngFor=\\\"let step of steps; let i = index\\\"\\n       [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n       class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n       [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n       (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n       [id]=\\\"_getStepContentId(i)\\\"\\n       [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n       [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-horizontal',\n                    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n                    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n                    'aria-orientation': 'horizontal',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.horizontalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatHorizontalStepper },\n                    { provide: CdkStepper, useExisting: MatHorizontalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], null, { labelPosition: [{\n            type: Input\n        }] }); })();\n    return MatHorizontalStepper;\n})();\nlet MatVerticalStepper = /** @class */ (() => {\n    class MatVerticalStepper extends MatStepper {\n        constructor(dir, changeDetectorRef, \n        // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n        elementRef, _document) {\n            super(dir, changeDetectorRef, elementRef, _document);\n            this._orientation = 'vertical';\n        }\n    }\nMatVerticalStepper.ɵfac = function MatVerticalStepper_Factory(t) { return new (t || MatVerticalStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatVerticalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatVerticalStepper, selectors: [[\"mat-vertical-stepper\"]], hostAttrs: [\"aria-orientation\", \"vertical\", \"role\", \"tablist\", 1, \"mat-stepper-vertical\"], inputs: { selectedIndex: \"selectedIndex\" }, exportAs: [\"matVerticalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatVerticalStepper },\n            { provide: CdkStepper, useExisting: MatVerticalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[\"class\", \"mat-step\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-step\"], [1, \"mat-vertical-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [1, \"mat-vertical-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-vertical-stepper-content\", 3, \"id\"], [1, \"mat-vertical-content\"], [3, \"ngTemplateOutlet\"]], template: function MatVerticalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatVerticalStepper_div_0_Template, 6, 25, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgTemplateOutlet], styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], encapsulation: 2, data: { animation: [matStepperAnimations.verticalStepTransition] }, changeDetection: 0 });\n    MatVerticalStepper.ctorParameters = () => [\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: ChangeDetectorRef },\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n    ];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatVerticalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-vertical-stepper',\n                exportAs: 'matVerticalStepper',\n                template: \"<div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n  <mat-step-header class=\\\"mat-vertical-stepper-header\\\"\\n                   (click)=\\\"step.select()\\\"\\n                   (keydown)=\\\"_onKeydown($event)\\\"\\n                   [tabIndex]=\\\"_getFocusIndex() == i ? 0 : -1\\\"\\n                   [id]=\\\"_getStepLabelId(i)\\\"\\n                   [attr.aria-posinset]=\\\"i + 1\\\"\\n                   [attr.aria-setsize]=\\\"steps.length\\\"\\n                   [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                   [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n                   [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                   [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                   [index]=\\\"i\\\"\\n                   [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                   [label]=\\\"step.stepLabel || step.label\\\"\\n                   [selected]=\\\"selectedIndex === i\\\"\\n                   [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                   [optional]=\\\"step.optional\\\"\\n                   [errorMessage]=\\\"step.errorMessage\\\"\\n                   [iconOverrides]=\\\"_iconOverrides\\\"\\n                   [disableRipple]=\\\"disableRipple\\\">\\n  </mat-step-header>\\n\\n  <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n    <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n         [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n         [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n         (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n         [id]=\\\"_getStepContentId(i)\\\"\\n         [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n         [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n      <div class=\\\"mat-vertical-content\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-vertical',\n                    'aria-orientation': 'vertical',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.verticalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatVerticalStepper },\n                    { provide: CdkStepper, useExisting: MatVerticalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n    return MatVerticalStepper;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nlet MatStepperNext = /** @class */ (() => {\n    class MatStepperNext extends CdkStepperNext {\n    }\nMatStepperNext.ɵfac = function MatStepperNext_Factory(t) { return ɵMatStepperNext_BaseFactory(t || MatStepperNext); };\nMatStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperNext, selectors: [[\"button\", \"matStepperNext\", \"\"]], hostVars: 1, hostBindings: function MatStepperNext_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepperNext_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperNext);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperNext]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n    return MatStepperNext;\n})();\n/** Button that moves to the previous step in a stepper workflow. */\nlet MatStepperPrevious = /** @class */ (() => {\n    class MatStepperPrevious extends CdkStepperPrevious {\n    }\nMatStepperPrevious.ɵfac = function MatStepperPrevious_Factory(t) { return ɵMatStepperPrevious_BaseFactory(t || MatStepperPrevious); };\nMatStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperPrevious, selectors: [[\"button\", \"matStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function MatStepperPrevious_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepperPrevious_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperPrevious);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n    return MatStepperPrevious;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet MatStepperModule = /** @class */ (() => {\n    class MatStepperModule {\n    }\nMatStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatStepperModule });\nMatStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatStepperModule_Factory(t) { return new (t || MatStepperModule)(); }, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [[\n            MatCommonModule,\n            CommonModule,\n            PortalModule,\n            MatButtonModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatStepperModule, { declarations: function () { return [MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon]; }, imports: function () { return [MatCommonModule,\n        CommonModule,\n        PortalModule,\n        MatButtonModule,\n        CdkStepperModule,\n        MatIconModule,\n        MatRippleModule]; }, exports: function () { return [MatCommonModule, MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatCommonModule,\n                    CommonModule,\n                    PortalModule,\n                    MatButtonModule,\n                    CdkStepperModule,\n                    MatIconModule,\n                    MatRippleModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                declarations: [\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher]\n            }]\n    }], null, null); })();\n    return MatStepperModule;\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatHorizontalStepper, MatStep, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, MatVerticalStepper, matStepperAnimations };\n\n//# sourceMappingURL=stepper.js.map","import {Injectable} from '@angular/core';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SubscriptionStepperState {\r\n    public mode: 'pricing'|'subscribe'|'changePlan';\r\n\r\n    /**\r\n     * Stripe.js instance.\r\n     */\r\n    public stripe: stripe.Stripe;\r\n\r\n    /**\r\n     * All available plans.\r\n     */\r\n    public plans: Plan[] = [];\r\n\r\n    /**\r\n     * Model for plan period radio group.\r\n     */\r\n    public radioGroupModel: number;\r\n\r\n    /**\r\n     * Base plan, selected in the first step.\r\n     */\r\n    public initialPlan$ = new BehaviorSubject<Plan>(null);\r\n\r\n    /**\r\n     * Final billing plan user has selected (base or yearly alternative)\r\n     */\r\n    public selectedPlan$ = new BehaviorSubject<Plan>(null);\r\n\r\n    constructor(private currentUser: CurrentUser) {\r\n        // if user was subscribed by admin from admin area, they will not have\r\n        // any payment methods attached so we'll need to show payment panel as well\r\n        this.mode = this.currentUser.isSubscribed() && this.currentUser.getSubscription().gateway !== 'none'  ? 'changePlan' : 'subscribe';\r\n    }\r\n\r\n    /**\r\n     * Select initial \"base\" plan.\r\n     */\r\n    public selectInitialPlan(plan: Plan) {\r\n        this.initialPlan$.next(plan);\r\n\r\n        const children = this.getChildPlans(plan);\r\n\r\n        if (children && children[0]) {\r\n            this.radioGroupModel = children[0].id;\r\n            this.selectedPlan$.next(children[0]);\r\n        } else {\r\n            this.selectedPlan$.next(plan);\r\n            this.radioGroupModel = plan.id;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select plan by specified ID.\r\n     */\r\n    public selectPlanById(id: number) {\r\n        this.selectedPlan$.next(this.plans.find(plan => plan.id === id));\r\n    }\r\n\r\n    /**\r\n     * Get different versions of specified plan.\r\n     * (yearly, weekly, every 2 years etc)\r\n     */\r\n    public getChildPlans(parent: Plan) {\r\n        return this.plans.filter(plan => plan.parent_id === parent.id && !plan.hidden);\r\n    }\r\n\r\n    /**\r\n     * Set all available plans.\r\n     */\r\n    public setPlans(plans: Plan[]) {\r\n        this.plans = plans;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {AppHttpClient} from '../../core/http/app-http-client.service';\r\nimport {Settings} from '../../core/config/settings.service';\r\nimport {User} from '../../core/types/models/User';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscriptions } from '../../shared/billing/subscriptions.service';\r\nimport { Subscription } from '../../shared/billing/models/subscription';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport { Translations } from '@common/core/translations/translations.service';\r\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PaypalSubscriptions {\r\n    private popupWidth = 450;\r\n    private popupHeight = 650;\r\n\r\n    /**\r\n     * Params for popup window.\r\n     */\r\n    private popupParams = {\r\n        menubar: 0,\r\n        location: 0,\r\n        locationbar: 0,\r\n        toolbar: 0,\r\n        titlebar: 0,\r\n        status: 0,\r\n        scrollbars: 1,\r\n        width: this.popupWidth,\r\n        height: this.popupHeight\r\n    };\r\n\r\n    // TODO: clean this up with rxjs or checkout.js\r\n    private resolveSubscribe: Function;\r\n    private rejectSubscribe: Function;\r\n    private subscriptionPending = false;\r\n    private executingAgreement = false;\r\n    private popup: Window;\r\n\r\n    constructor(\r\n        private http: AppHttpClient,\r\n        private settings: Settings,\r\n        private subscriptions: Subscriptions,\r\n        private i18n: Translations,\r\n    ) {}\r\n\r\n    /**\r\n     * Subscribe to specified plan on paypal.\r\n     */\r\n    public subscribe(params: {plan_id: number, start_date?: string}): Promise<User> {\r\n        this.subscriptionPending = true;\r\n\r\n        this.popup = this.openPaypalPopup(this.settings.getBaseUrl(true) + 'billing/paypal/loading');\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.rejectSubscribe = reject;\r\n            this.resolveSubscribe = resolve;\r\n\r\n            this.createPaypalAgreement(params).subscribe(response => {\r\n                this.listenForMessages(params.plan_id);\r\n                this.popup.location.href = response.urls.approve;\r\n            }, errResponse => this.rejectSubscriptionPromise(errResponse));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Change plan of subscription to specified one.\r\n     */\r\n    public changePlan(subscription: Subscription, plan: Plan): Promise<User> {\r\n        return new Promise(resolve => {\r\n            this.subscriptions.cancel(subscription.id, {delete: true}).subscribe(() => {\r\n                this.subscribe({plan_id: plan.id, start_date: subscription.renews_at}).then(user => resolve(user));\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen for messages from paypal window and execute paypal agreement.\r\n     */\r\n    private listenForMessages(planId: number) {\r\n        window.addEventListener('message', e => {\r\n            if (this.settings.getBaseUrl().indexOf(e.origin) === -1) return;\r\n\r\n            // user cancelled payment on paypal popup manually\r\n            if (e.data.status !== 'success') {\r\n                return this.rejectSubscriptionPromise();\r\n            }\r\n\r\n            // user approved payment\r\n            this.executingAgreement = true;\r\n            this.executePaypalAgreement(e.data.token, planId)\r\n                .pipe(finalize(() => this.executingAgreement = false))\r\n                .subscribe(\r\n                    response => this.resolveSubscriptionPromise(response.user),\r\n                    errorResponse => this.rejectSubscriptionPromise(),\r\n                );\r\n        }, false);\r\n    }\r\n\r\n    /**\r\n     * Open new paypal express popup window.\r\n     */\r\n    private openPaypalPopup(url: string) {\r\n        const params = Object.assign({}, this.popupParams, {\r\n            left: (screen.width / 2) - (this.popupWidth / 2),\r\n            top: (screen.height / 2) - (this.popupHeight / 2)\r\n        });\r\n\r\n        const newWindow = window.open(\r\n            url,\r\n            'PayPal',\r\n            Object.keys(params).map(key => key + '=' + params[key]).join(', '),\r\n        );\r\n\r\n        const interval = setInterval(() => {\r\n            if (newWindow == null || newWindow.closed) {\r\n                window.clearInterval(interval);\r\n\r\n                if (this.subscriptionPending && ! this.executingAgreement) {\r\n                    this.rejectSubscriptionPromise();\r\n                }\r\n            }\r\n        }, 1000);\r\n\r\n        return newWindow;\r\n    }\r\n\r\n    private createPaypalAgreement(params: {plan_id: number, start_date?: string}): Observable<{urls: {execute: string, approve: string}}> {\r\n        return this.http.post('billing/subscriptions/paypal/agreement/create', {plan_id: params.plan_id, start_date: params.start_date});\r\n    }\r\n\r\n    private executePaypalAgreement(agreement_id: string, plan_id: number): Observable<{user: User}> {\r\n        return this.http.post('billing/subscriptions/paypal/agreement/execute', {agreement_id, plan_id});\r\n    }\r\n\r\n    /**\r\n     * Reject subscription promise.\r\n     */\r\n    private rejectSubscriptionPromise(errResponse?: BackendErrorResponse) {\r\n        this.rejectSubscribe(this.i18n.t(errResponse?.message || 'Payment failed. Please try again later.'));\r\n        this.subscriptionPending = false;\r\n        this.popup && this.popup.close();\r\n    }\r\n\r\n    /**\r\n     * Resolve subscription promise.\r\n     */\r\n    private resolveSubscriptionPromise(user: User) {\r\n        this.resolveSubscribe(user);\r\n        this.subscriptionPending = false;\r\n    }\r\n}\r\n","<material-navbar [hideRegisterButton]=\"state.mode === 'pricing'\"></material-navbar>\r\n\r\n<div class=\"bg-wrapper\">\r\n    <mat-horizontal-stepper class=\"container main-content\" [linear]=\"true\">\r\n        <ng-template matStepperIcon=\"edit\">\r\n            <mat-icon svgIcon=\"edit\" class=\"size-16\"></mat-icon>\r\n        </ng-template>\r\n\r\n        <mat-step [label]=\"'Subscription plan' | trans\" [completed]=\"!!(state.initialPlan$ | async)\">\r\n            <select-plan-panel (selected)=\"nextStep()\"></select-plan-panel>\r\n            <contact-widget></contact-widget>\r\n        </mat-step>\r\n\r\n        <mat-step [label]=\"'Subscription interval' | trans\" [completed]=\"!!(state.selectedPlan$ | async)\">\r\n            <select-plan-period-panel [showSidebar]=\"true\" (selected)=\"nextStep()\"></select-plan-period-panel>\r\n        </mat-step>\r\n\r\n        <mat-step [label]=\"'Payment' | trans\" [completed]=\"false\" *ngIf=\"state.mode === 'subscribe'\">\r\n            <div class=\"step-container payment-step\">\r\n                <div class=\"left-col\">\r\n                    <create-subscription-panel [plan]=\"state.selectedPlan$ | async\" (loading)=\"loading$.next($event)\" (completed)=\"onCompleted()\"></create-subscription-panel>\r\n                </div>\r\n\r\n                <upgrade-page-aside [plan]=\"state.selectedPlan$ | async\" class=\"right-col\"></upgrade-page-aside>\r\n            </div>\r\n\r\n            <p\r\n                class=\"legal-info\" *ngIf=\"state.selectedPlan$ | async as plan\"\r\n                trans\r\n                [transValues]=\"{\r\n                    siteName: settings.get('branding.site_name'),\r\n                    intervalCount: plan.interval_count > 1 ? plan.interval_count : '',\r\n                    intervalName: plan.interval_count > 1 ? plan.interval + 's' : plan.interval\r\n                }\">\r\n                You authorise :siteName to charge you automatically every :intervalCount :intervalName, until you cancel your subscription. You consent to get access to your :siteName subscription immediately, and acknowledge that refunds are only available within 14 days and provided you haven't accessed :siteName. You will be able to cancel your subscription at any time from your profile page.\r\n            </p>\r\n        </mat-step>\r\n    </mat-horizontal-stepper>\r\n</div>\r\n\r\n<loading-indicator class=\"overlay\" [isVisible]=\"loading$ | async\"></loading-indicator>\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SubscriptionStepperState } from '../subscriptions/subscription-stepper-state.service';\r\nimport { Settings } from '../../core/config/settings.service';\r\nimport { Toast } from '../../core/ui/toast.service';\r\nimport { Subscriptions } from '../../shared/billing/subscriptions.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { LocalStorage } from '@common/core/services/local-storage.service';\r\nimport { Plan } from '@common/core/types/models/Plan';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { PaypalSubscriptions } from '@common/billing/subscriptions/paypal-subscriptions';\r\n\r\nexport interface CreditCard {\r\n    number?: number|string;\r\n    expiration_month?: number|string;\r\n    expiration_year?: number|string;\r\n    security_code?: number|string;\r\n}\r\n\r\nenum Steps {\r\n    Plans = 0,\r\n    Period = 1,\r\n    Payment = 2\r\n}\r\n\r\ninterface LocalStorageState {\r\n    initial?: number;\r\n    final?: number;\r\n}\r\n\r\nconst LOCAL_STORAGE_KEY = 'be.onboarding.selected';\r\n\r\n@Component({\r\n    selector: 'upgrade-page',\r\n    templateUrl: './upgrade-page.component.html',\r\n    styleUrls: ['./upgrade-page.component.scss'],\r\n    providers: [SubscriptionStepperState],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UpgradePageComponent implements OnInit {\r\n    @ViewChild(MatStepper, { static: true }) stepper: MatStepper;\r\n    @Input() set mode(value: 'pricing'|'subscribe'|'changePlan') {\r\n        this.state.mode = value;\r\n    }\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n\r\n    constructor(\r\n        private subscriptions: Subscriptions,\r\n        private route: ActivatedRoute,\r\n        public settings: Settings,\r\n        private router: Router,\r\n        private toast: Toast,\r\n        public state: SubscriptionStepperState,\r\n        private localStorage: LocalStorage,\r\n        private currentUser: CurrentUser,\r\n        private paypalSubscriptions: PaypalSubscriptions,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.route.data.subscribe((data: {plans: Plan[]}) => {\r\n            this.state.setPlans(data.plans);\r\n            if (this.state.mode === 'subscribe') {\r\n               this.hydrateStateFromLocalStorage();\r\n            }\r\n        });\r\n    }\r\n\r\n    private hydrateStateFromLocalStorage() {\r\n        const storedState = this.localStorage.get(LOCAL_STORAGE_KEY) as LocalStorageState;\r\n        if (storedState && storedState.initial && storedState.final) {\r\n            const initialPlan = this.state.plans.find(p => p.id === storedState.initial),\r\n                finalPlan = this.state.plans.find(p => p.id === storedState.final);\r\n            if (initialPlan && finalPlan) {\r\n                this.state.selectInitialPlan(initialPlan);\r\n                this.state.selectPlanById(finalPlan.id);\r\n                this.stepper.selectedIndex = Steps.Payment;\r\n            }\r\n        }\r\n    }\r\n\r\n    public nextStep() {\r\n        if (this.state.mode === 'changePlan' && this.stepper.selectedIndex === Steps.Period) {\r\n            this.changePlan();\r\n        } else if (this.state.mode === 'pricing' && this.stepper.selectedIndex === Steps.Period) {\r\n            this.localStorage.set(LOCAL_STORAGE_KEY, {\r\n                initial: this.state.initialPlan$.value.id,\r\n                final: this.state.selectedPlan$.value.id\r\n            });\r\n            this.router.navigate(['register']);\r\n        } else {\r\n            this.stepper.next();\r\n        }\r\n    }\r\n\r\n    public onCompleted() {\r\n        this.loading$.next(false);\r\n        this.router.navigate(['/']);\r\n        this.localStorage.remove(LOCAL_STORAGE_KEY);\r\n        this.toast.open({\r\n            message: 'Subscribed to \":planName\" plan successfully.',\r\n            replacements: {planName: this.getSelectedOrParentPlanName()},\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Change user's active subscription plan to specified one.\r\n     */\r\n    public changePlan() {\r\n        const plan = this.state.selectedPlan$.value,\r\n            activeSubscription = this.currentUser.getSubscription();\r\n        // user already subscribed\r\n        if (this.currentUser.getSubscription({planId: plan.id})) {\r\n            return;\r\n        }\r\n        this.loading$.next(true);\r\n        if (activeSubscription.gateway === 'paypal') {\r\n            this.paypalSubscriptions.changePlan(activeSubscription, plan).then(user => {\r\n                this.loading$.next(false);\r\n                this.currentUser.assignCurrent(user);\r\n                this.router.navigate(['/billing/subscription']);\r\n                this.toast.open('Subscription plan changed.');\r\n            });\r\n        } else {\r\n            this.subscriptions.changePlan(activeSubscription.id, plan)\r\n                .pipe(finalize(() => this.loading$.next(false)))\r\n                .subscribe(response => {\r\n                    this.currentUser.assignCurrent(response['user']);\r\n                    this.router.navigate(['/billing/subscription']);\r\n                    this.toast.open('Subscription plan changed.');\r\n                });\r\n        }\r\n    }\r\n\r\n    private getSelectedOrParentPlanName(): string {\r\n        const selectedPlan = this.state.selectedPlan$.value;\r\n        const plan = selectedPlan.parent ? selectedPlan.parent : selectedPlan;\r\n        return plan.name;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Resolve, RouterStateSnapshot, ActivatedRouteSnapshot, Router} from '@angular/router';\r\nimport {catchError, map, mergeMap} from 'rxjs/operators';\r\nimport {EMPTY, Observable, of} from 'rxjs';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {Plans} from '@common/shared/billing/plans.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BillingPlansResolver implements Resolve<Plan[]> {\r\n    constructor(\r\n        private plans: Plans,\r\n        private router: Router\r\n    ) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Plan[]> {\r\n        return this.plans.all({order: 'position|asc', perPage: 30})\r\n            .pipe(map(response => response.pagination.data))\r\n            .pipe(\r\n                catchError(() => {\r\n                    this.router.navigateByUrl('/');\r\n                    return EMPTY;\r\n                }),\r\n                mergeMap((plans: Plan[]) => {\r\n                    return of(plans);\r\n                })\r\n            );\r\n    }\r\n}\r\n\r\n","<div class=\"text\" trans>Accepted Payment Methods</div>\r\n<div class=\"card-icons\">\r\n    <img [src]=\"getCardIcon('paypal')\">\r\n    <img [src]=\"getCardIcon(card)\" *ngFor=\"let card of acceptedCards\">\r\n</div>","import {ChangeDetectionStrategy, Component, ElementRef, OnInit} from '@angular/core';\r\nimport {Settings} from '@common/core/config/settings.service';\r\n\r\n@Component({\r\n    selector: 'accepted-payments-header',\r\n    templateUrl: './accepted-payments-header.component.html',\r\n    styleUrls: ['./accepted-payments-header.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AcceptedPaymentsHeaderComponent implements OnInit {\r\n    public acceptedCards: string[] = [];\r\n\r\n    constructor(private settings: Settings, public el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        this.acceptedCards = this.settings.getJson('billing.accepted_cards', []);\r\n    }\r\n\r\n    public getCardIcon(card: string) {\r\n        return this.settings.getAssetUrl() + 'images/billing/' + card.toLowerCase() + '.png';\r\n    }\r\n}\r\n","<ul *ngIf=\"getPlan()\" [class.dense]=\"dense\">\r\n    <ng-container *ngIf=\"getPlan().show_permissions\">\r\n        <li *ngFor=\"let permission of getPlan().permissions\">\r\n            <mat-icon class=\"check-icon\" svgIcon=\"check\" *ngIf=\"showCheckIcons\"></mat-icon>\r\n            <span>{{permission.display_name || permission.name}}</span>\r\n        </li>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"getPlan().features.length\">\r\n        <li *ngFor=\"let feature of getPlan().features\">\r\n            <mat-icon class=\"check-icon\" svgIcon=\"check\" *ngIf=\"showCheckIcons\"></mat-icon>\r\n            <span>{{feature}}</span>\r\n        </li>\r\n    </ng-container>\r\n</ul>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\n\r\n@Component({\r\n    selector: 'plan-features-list',\r\n    templateUrl: './plan-features-list.component.html',\r\n    styleUrls: ['./plan-features-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PlanFeaturesListComponent {\r\n    @Input() plan: Plan;\r\n    @Input() showCheckIcons = false;\r\n    @Input() dense = false;\r\n\r\n    public getPlan() {\r\n        return this.plan.parent || this.plan;\r\n    }\r\n}\r\n","<accepted-payments-header></accepted-payments-header>\r\n\r\n<ng-container *ngIf=\"plan\">\r\n    <div class=\"selected-plan\">\r\n        <div class=\"header\"><full-plan-name [plan]=\"plan\"></full-plan-name></div>\r\n        <plan-features-list class=\"plan-features-list\" [plan]=\"plan\" [showCheckIcons]=\"true\" [dense]=\"true\"></plan-features-list>\r\n    </div>\r\n\r\n    <div class=\"divider\"></div>\r\n\r\n    <div class=\"secure-shopping\">\r\n        <div class=\"icon-container\">\r\n            <mat-icon svgIcon=\"shield-custom\"></mat-icon>\r\n        </div>\r\n        <div class=\"text\">\r\n            <div class=\"primary\" trans>SSL Secure Payment</div>\r\n            <div class=\"secondary\" trans>Your information is protected by 256-bit SSL encryption</div>\r\n        </div>\r\n    </div>\r\n</ng-container>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\n\r\n@Component({\r\n    selector: 'upgrade-page-aside',\r\n    templateUrl: './upgrade-page-aside.component.html',\r\n    styleUrls: ['./upgrade-page-aside.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UpgradePageAsideComponent {\r\n    @Input() plan: Plan;\r\n}\r\n","<ng-container *ngIf=\"state.selectedPlan$ | async as selectedPlan\">\r\n    <div class=\"line\">\r\n        <div class=\"summary-left\">\r\n            <full-plan-name [plan]=\"selectedPlan\"></full-plan-name>\r\n        </div>\r\n        <div class=\"summary-right\">{{selectedPlan.amount | currency:selectedPlan.currency}}</div>\r\n    </div>\r\n\r\n    <div class=\"line emphasis\">\r\n        <div class=\"summary-left\" trans>Total</div>\r\n        <div class=\"summary-right\">{{selectedPlan.amount | currency:selectedPlan.currency}}</div>\r\n    </div>\r\n</ng-container>","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\r\n\r\n@Component({\r\n    selector: 'order-summary',\r\n    templateUrl: './order-summary.component.html',\r\n    styleUrls: ['./order-summary.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderSummaryComponent {\r\n    constructor(public state: SubscriptionStepperState) {}\r\n}\r\n","<form (ngSubmit)=\"submitForm()\" class=\"card-form many-inputs\" ngNativeValidate>\r\n    <div class=\"input-container\">\r\n        <label for=\"cardNumber\" trans>Credit or Debit Card</label>\r\n        <div id=\"cardNumber\" class=\"fake-input\"></div>\r\n    </div>\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"cardExpiry\" trans>Card Expiration</label>\r\n        <div id=\"cardExpiry\" class=\"fake-input\"></div>\r\n    </div>\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"cardCvc\" trans>CVC</label>\r\n        <div id=\"cardCvc\" class=\"fake-input\"></div>\r\n    </div>\r\n\r\n    <div class=\"error margin-bottom\" role=\"alert\" *ngIf=\"error$ | async as error\">{{error}}</div>\r\n\r\n    <order-summary *ngIf=\"showOrderSummary\"></order-summary>\r\n\r\n    <button type=\"submit\" *ngIf=\"showSubmitButton\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">{{submitButtonText | trans}}</button>\r\n</form>\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    NgZone,\r\n    OnDestroy,\r\n    Output\r\n} from '@angular/core';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {User} from '../../core/types/models/User';\r\nimport {Settings} from '../../core/config/settings.service';\r\nimport {LazyLoaderService} from '../../core/utils/lazy-loader.service';\r\nimport {CurrentUser} from '../../auth/current-user';\r\nimport {Subscriptions} from '../../shared/billing/subscriptions.service';\r\nimport {Toast} from '../../core/ui/toast.service';\r\nimport {ThemeService} from '@common/core/theme.service';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\r\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\r\n\r\n@Component({\r\n    selector: 'credit-card-form',\r\n    templateUrl: './credit-card-form.component.html',\r\n    styleUrls: ['./credit-card-form.component.scss'],\r\n    // changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CreditCardFormComponent implements OnDestroy, AfterViewInit {\r\n\r\n    /**\r\n     * Event fired when form is submitted and card is added successfully on active gateway.\r\n     */\r\n    @Output() created: EventEmitter<User> = new EventEmitter();\r\n\r\n    /**\r\n     * Display text for form submit button.\r\n     */\r\n    @Input() submitButtonText = 'Submit';\r\n\r\n    /**\r\n     * Whether form submit button should be shown.\r\n     */\r\n    @Input() showSubmitButton = true;\r\n\r\n    /**\r\n     * Whether order summary should be shown in the template.\r\n     */\r\n    @Input() showOrderSummary = false;\r\n\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public error$ = new BehaviorSubject<string>(null);\r\n    private stripeElements: stripe.elements.Element[] = [];\r\n\r\n    constructor(\r\n        private subscriptions: Subscriptions,\r\n        private currentUser: CurrentUser,\r\n        private settings: Settings,\r\n        private zone: NgZone,\r\n        private lazyLoader: LazyLoaderService,\r\n        private toast: Toast,\r\n        private theme: ThemeService,\r\n        private state: SubscriptionStepperState,\r\n    ) {\r\n        this.resetForm();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initStripe();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroyStripe();\r\n    }\r\n\r\n    /**\r\n     * Submit stripe elements credit card form.\r\n     */\r\n    public async submitForm() {\r\n        this.loading$.next(true);\r\n\r\n        const {token, error} = await this.state.stripe.createToken(this.stripeElements[0]);\r\n\r\n        if (error) {\r\n            this.error$.next(error.message);\r\n            this.loading$.next(false);\r\n        } else {\r\n            this.addCardToUser(token);\r\n        }\r\n    }\r\n\r\n    public addCardToUser(stripeToken: stripe.Token) {\r\n        this.loading$.next(true);\r\n        this.subscriptions.addCard(stripeToken.id)\r\n            .pipe(finalize(() =>  this.loading$.next(false)))\r\n            .subscribe(response => {\r\n                this.resetForm();\r\n                this.currentUser.assignCurrent(response.user);\r\n                this.created.emit(response.user);\r\n            }, (errResponse: BackendErrorResponse) => {\r\n                this.error$.next(errResponse.message);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Initiate stripe elements credit card form.\r\n     */\r\n    private initStripe() {\r\n        this.lazyLoader.loadAsset('https://js.stripe.com/v3', {type: 'js'}).then(() => {\r\n            const fields = ['cardNumber', 'cardExpiry', 'cardCvc'] as stripe.elements.elementsType[];\r\n            this.state.stripe = Stripe(this.settings.get('billing.stripe_public_key'));\r\n            const elements = this.state.stripe.elements();\r\n\r\n            const isDarkMode = this.theme.selectedTheme$.value.is_dark;\r\n            fields.forEach(field => {\r\n                const el = elements.create(field, {classes: {base: 'base'}, style: {base: {color: isDarkMode ? '#fff' : 'inherit'}}});\r\n                el.mount('#' + field);\r\n                el.on('change', this.onChange.bind(this));\r\n                this.stripeElements.push(el);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Destroy all stripe elements instances.\r\n     */\r\n    private destroyStripe() {\r\n        this.stripeElements.forEach(el => {\r\n            el.unmount();\r\n            el.destroy();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fired on stripe element \"change\" event.\r\n     */\r\n    private onChange(change: stripe.elements.ElementChangeResponse) {\r\n        this.zone.run(() => {\r\n            this.error$.next(change.error ? change.error.message : null);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Reset credit card form.\r\n     */\r\n    private resetForm() {\r\n        this.error$.next(null);\r\n    }\r\n}\r\n","<mat-tab-group [dynamicHeight]=\"true\" color=\"accent\" [selectedIndex]=\"selectedIndex$ | async\">\r\n    <mat-tab [label]=\"'Bank Card' | trans\" *ngIf=\"settings.get('billing.stripe.enable')\">\r\n        <credit-card-form (created)=\"subscribeOnStripe()\" [submitButtonText]=\"submitText\" [showOrderSummary]=\"true\"></credit-card-form>\r\n    </mat-tab>\r\n    <mat-tab label=\"Paypal\" [disabled]=\"disablePaypalTab\" *ngIf=\"settings.get('billing.paypal.enable')\">\r\n        <div class=\"paypal-tab\">\r\n            <p class=\"info\" trans>After clicking the button below, you will be redirected to paypal.com to approve the subscription.</p>\r\n            <order-summary></order-summary>\r\n            <button mat-raised-button color=\"accent\" (click)=\"subscribeOnPaypal()\" [disabled]=\"loading$ | async\">{{submitText | trans}}</button>\r\n        </div>\r\n    </mat-tab>\r\n</mat-tab-group>\r\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport {Subscription} from '@common/shared/billing/models/subscription';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {CreateSubOnStripeResponse, Subscriptions} from '@common/shared/billing/subscriptions.service';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {PaypalSubscriptions} from '@common/billing/subscriptions/paypal-subscriptions';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {User} from '@common/core/types/models/User';\r\nimport {CreditCard} from '@common/billing/upgrade-page/upgrade-page.component';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\r\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\r\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\r\n\r\nexport interface SubscriptionCompletedEvent {\r\n    status: 'created'|'updated';\r\n}\r\n\r\ninterface NewSubscriptionPayload {\r\n    card?: CreditCard;\r\n    start_date?: string;\r\n    plan_id: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'create-subscription-panel',\r\n    templateUrl: './create-subscription-panel.component.html',\r\n    styleUrls: ['./create-subscription-panel.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CreateSubscriptionPanelComponent {\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public selectedIndex$ = new BehaviorSubject<number>(0);\r\n\r\n    /**\r\n     * Fired when subscription creation starts or ends.\r\n     */\r\n    @Output() loading = new EventEmitter<boolean>();\r\n\r\n    /**\r\n     * Text for submit purchase button.\r\n     */\r\n    @Input() submitText = 'Submit Purchase';\r\n\r\n    /**\r\n     * Whether paypal tab should be disabled.\r\n     */\r\n    @Input() disablePaypalTab = false;\r\n\r\n    /**\r\n     * We're changing user subscription from this one.\r\n     * Used for prorating the new subscription start date.\r\n     */\r\n    @Input() from: Subscription;\r\n\r\n    /**\r\n     * Plan user should be subscribed to.\r\n     */\r\n    @Input() plan: Plan;\r\n\r\n    /**\r\n     * Fired when subscription is created or updated.\r\n     */\r\n    @Output() completed: EventEmitter<SubscriptionCompletedEvent> = new EventEmitter();\r\n\r\n    constructor(\r\n        private subscriptions: Subscriptions,\r\n        private currentUser: CurrentUser,\r\n        private paypal: PaypalSubscriptions,\r\n        private toast: Toast,\r\n        public settings: Settings,\r\n        private state: SubscriptionStepperState,\r\n    ) {}\r\n\r\n    /**\r\n     * Subscribe user to current plan on stripe gateway.\r\n     */\r\n    public subscribeOnStripe() {\r\n        // if user is already subscribed to this plan, fire \"updated\" event and bail\r\n        if (this.currentUser.getSubscription({gateway: 'stripe', planId: this.plan.id})) {\r\n            return this.completed.emit({status: 'updated'});\r\n        }\r\n\r\n        this.startLoading();\r\n\r\n        this.subscriptions.createOnStripe(this.getNewSubscriptionPayload())\r\n            .subscribe(response => {\r\n                if (response.status === 'complete') {\r\n                    this.completeSubscription(response.user);\r\n                } else {\r\n                   this.confirmCardPayment(response);\r\n                }\r\n            }, (errResponse: BackendErrorResponse) => {\r\n                const key = Object.keys(errResponse.errors)[0];\r\n                this.toast.open(errResponse.errors[key] || HttpErrors.Default);\r\n                this.stopLoading();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Confirm card payment via 3D secure.\r\n     */\r\n    private confirmCardPayment(response: CreateSubOnStripeResponse) {\r\n        this.state.stripe.confirmCardPayment(response.payment_intent_secret)\r\n            .then(result => {\r\n                if (result.error) {\r\n                    this.stopLoading();\r\n                    this.toast.open('Card payment was not confirmed.', {action: 'Retry'})\r\n                        .onAction()\r\n                        .subscribe(() => {\r\n                            this.confirmCardPayment(response);\r\n                        });\r\n                } else {\r\n                    this.subscriptions.finalizeOnStripe(response.reference, response.user.id)\r\n                        .subscribe(finalResponse => {\r\n                            this.completeSubscription(finalResponse.user);\r\n                        });\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Subscribe user to current plan on paypal gateway.\r\n     */\r\n    public subscribeOnPaypal() {\r\n        // if user is already subscribed to this plan, fire \"updated\" event and bail\r\n        if (this.currentUser.getSubscription({gateway: 'paypal', planId: this.plan.id})) {\r\n            return this.completed.emit({status: 'updated'});\r\n        }\r\n\r\n        this.startLoading();\r\n\r\n        this.paypal.subscribe(this.getNewSubscriptionPayload()).then(user => {\r\n            this.completeSubscription(user);\r\n            this.selectedIndex$.next(0);\r\n        }).catch(message => {\r\n            this.stopLoading();\r\n            this.toast.open(message || 'There was an issue. Please try again later.');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get payload for backend for creating a new subscription.\r\n     */\r\n    private getNewSubscriptionPayload(): NewSubscriptionPayload {\r\n       const payload = {plan_id: this.plan.id};\r\n\r\n       if (this.from) {\r\n           payload['start_date'] = this.from.renews_at;\r\n       }\r\n\r\n       return payload;\r\n    }\r\n\r\n    private completeSubscription(user: User) {\r\n        this.stopLoading();\r\n        this.currentUser.assignCurrent(user);\r\n        this.completed.emit({status: 'created'});\r\n    }\r\n\r\n    private startLoading() {\r\n        this.loading$.next(true);\r\n        this.loading.emit(true);\r\n    }\r\n\r\n    private stopLoading() {\r\n        this.loading$.next(false);\r\n        this.loading.emit(false);\r\n    }\r\n}\r\n","<material-navbar [menuPosition]=\"settings.get('vebto.navbar.defaultPosition')\"></material-navbar>\r\n\r\n<div class=\"content container mat-elevation-z1\" *ngIf=\"activeSubscription$ | async as activeSubscription\">\r\n    <div class=\"main\">\r\n        <div class=\"main-section\">\r\n            <div class=\"main-section-title\"><full-plan-name [plan]=\"activeSubscription.plan\"></full-plan-name></div>\r\n            <div class=\"main-section-content\">\r\n                <ng-container *ngIf=\"canCancel()\">\r\n                    <p>\r\n                        {{ 'Your plan will automatically renew on' | trans }}\r\n                        <strong>{{getFormattedRenewDate() | formattedDate}}</strong>\r\n                        {{ \"and you'll be charged\" | trans }}\r\n                        <strong>{{activeSubscription.plan.amount | currency:activeSubscription.plan.currency}}</strong>.\r\n                    </p>\r\n\r\n                    <a mat-raised-button color=\"accent\" routerLink=\"/billing/upgrade\" trans>Change Plan</a>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"canResume()\">\r\n                    <p>{{ 'You are on a grace period until' | trans }} <strong>{{getFormattedEndDate() | formattedDate}}</strong>. {{ 'Your subscription will not automatically resume and you will not be charged' | trans }}.</p>\r\n                    <p trans>You still have access to your plan's features until this date and you can resume your subscription anytime, by clicking button below.</p>\r\n                    <button mat-raised-button color=\"accent\" (click)=\"resumeSubscription()\" trans>Resume</button>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"main-section\" *ngIf=\"canCancel() && canChangePaymentMethod()\">\r\n            <div class=\"main-section-title\" trans>Payment Method</div>\r\n            <div class=\"main-title-description\" trans>Change your preferred payment method below. You can use a credit card or PayPal.</div>\r\n\r\n            <p>{{ 'Current payment Method' | trans }}: <strong>{{activeSubscription.gateway === 'paypal' ? 'PayPal' : ('Credit Card' | trans)}}</strong></p>\r\n\r\n            <div class=\"card-preview\" *ngIf=\"activeSubscription.gateway === 'stripe'\">\r\n                <div class=\"icon\"><mat-icon svgIcon=\"credit-card\"></mat-icon></div>\r\n                <div class=\"info\">{{currentUser.get('card_brand')}} **** {{currentUser.get('card_last_four')}}</div>\r\n            </div>\r\n\r\n            <create-subscription-panel\r\n                    (completed)=\"onPaymentMethodChange($event)\"\r\n                    (loading)=\"loading$.next($event)\"\r\n                    [plan]=\"getPlan()\"\r\n                    [from]=\"activeSubscription\"\r\n                    [disablePaypalTab]=\"activeSubscription.gateway === 'paypal'\"\r\n                    submitText=\"Change Payment Method\"\r\n            ></create-subscription-panel>\r\n        </div>\r\n\r\n        <div class=\"main-section\" *ngIf=\"canCancel()\">\r\n            <div class=\"main-section-title\" trans>Cancel Subscription</div>\r\n\r\n            <div class=\"main-section-content\">\r\n                <p trans>After cancelling subscription, you will have access to your active plan until your billing period end.</p>\r\n            </div>\r\n\r\n            <div class=\"main-section-actions\">\r\n                <button mat-raised-button color=\"warn\" (click)=\"maybeCancelSubscription()\" trans>Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <upgrade-page-aside [plan]=\"getPlan()\"></upgrade-page-aside>\r\n\r\n    <loading-indicator class=\"overlay\" [isVisible]=\"loading$ | async\"></loading-indicator>\r\n</div>\r\n\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { finalize, share } from 'rxjs/operators';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Subscription } from '@common/shared/billing/models/subscription';\r\nimport { Settings } from '@common/core/config/settings.service';\r\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\r\nimport { Subscriptions } from '@common/shared/billing/subscriptions.service';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { Toast } from '@common/core/ui/toast.service';\r\nimport { Plan } from '@common/core/types/models/Plan';\r\nimport { ConfirmModalComponent } from '@common/core/ui/confirm-modal/confirm-modal.component';\r\nimport { SubscriptionCompletedEvent } from '@common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component';\r\nimport { User } from '@common/core/types/models/User';\r\n\r\n@Component({\r\n    selector: 'user-subscription-page',\r\n    templateUrl: './user-subscription-page.component.html',\r\n    styleUrls: ['./user-subscription-page.component.scss'],\r\n   changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UserSubscriptionPageComponent implements OnInit {\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public activeSubscription$ = new BehaviorSubject<Subscription>(null);\r\n\r\n    constructor(\r\n        public settings: Settings,\r\n        private modal: Modal,\r\n        private subscriptions: Subscriptions,\r\n        public currentUser: CurrentUser,\r\n        private toast: Toast,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.activeSubscription$.next(this.currentUser.getSubscription());\r\n    }\r\n\r\n    public canResume() {\r\n        return this.currentUser.onGracePeriod();\r\n    }\r\n\r\n    public canCancel() {\r\n        return this.currentUser.isSubscribed() && !this.currentUser.onGracePeriod();\r\n    }\r\n\r\n    public canChangePaymentMethod() {\r\n        return this.settings.get('billing.stripe.enable') || this.settings.get('billing.paypal.enable');\r\n    }\r\n\r\n    public getFormattedEndDate(): string {\r\n        if ( ! this.activeSubscription$.value.ends_at) return null;\r\n        return this.activeSubscription$.value.ends_at.split(' ')[0];\r\n    }\r\n\r\n    public getFormattedRenewDate() {\r\n        if ( ! this.activeSubscription$.value.renews_at) return null;\r\n        return this.activeSubscription$.value.renews_at.split(' ')[0];\r\n    }\r\n\r\n    public getPlan(): Plan {\r\n        return this.activeSubscription$.value.plan;\r\n    }\r\n\r\n    /**\r\n     * Ask user to confirm deletion of selected templates\r\n     * and delete selected templates if user confirms.\r\n     */\r\n    public maybeCancelSubscription() {\r\n        this.modal.open(ConfirmModalComponent, {\r\n            title: 'Cancel Subscription',\r\n            body: 'Are you sure you want to cancel your subscription?',\r\n            ok: 'Yes, Cancel',\r\n            cancel: 'Go Back'\r\n        }).afterClosed().subscribe(confirmed => {\r\n            if ( ! confirmed) return;\r\n            this.cancelSubscription().subscribe(() => {\r\n                this.toast.open('Subscription cancelled.');\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Resume cancelled subscription.\r\n     */\r\n    public resumeSubscription() {\r\n        this.loading$.next(true);\r\n        this.subscriptions.resume(this.activeSubscription$.value.id)\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(response => {\r\n                this.currentUser.setSubscription(response.subscription);\r\n                this.activeSubscription$.next(this.currentUser.getSubscription());\r\n                this.toast.open('Subscription resumed.');\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Called after user payment method for active subscription has been changed successfully.\r\n     */\r\n    public onPaymentMethodChange(e: SubscriptionCompletedEvent) {\r\n        // if we've only changed customer card information on same\r\n        // payment gateway, show success message and bail\r\n        if (e.status === 'updated') {\r\n            this.toast.open('Payment method updated.');\r\n            return;\r\n        }\r\n\r\n        this.loading$.next(true);\r\n\r\n        // otherwise cancel user's subscription on the other gateway\r\n        this.cancelSubscription({delete: true}).subscribe(() => {\r\n            this.toast.open('Payment method updated.');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Cancel currently active user subscription.\r\n     */\r\n    private cancelSubscription(params: {delete?: boolean} = {}): Observable<{user: User}> {\r\n        this.loading$.next(true);\r\n\r\n        const request = this.subscriptions.cancel(this.activeSubscription$.value.id, {delete: params.delete})\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .pipe(share());\r\n\r\n        request.subscribe(response => {\r\n            // set new active subscription, if user had more then one\r\n            this.updateUserAndSubscription(response.user);\r\n        });\r\n\r\n        return request;\r\n    }\r\n\r\n    /**\r\n     * Update current user and active subscription.\r\n     */\r\n    private updateUserAndSubscription(user: User) {\r\n        this.currentUser.assignCurrent(user);\r\n        this.activeSubscription$.next(this.currentUser.getSubscription());\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\r\nimport {CurrentUser} from '../../auth/current-user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserSubscribedGuard implements CanActivate, CanActivateChild {\r\n\r\n    constructor(private currentUser: CurrentUser, private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    private handle() {\r\n        if (this.currentUser.isSubscribed()) { return true; }\r\n\r\n        this.router.navigate(['/billing/upgrade']);\r\n\r\n        return false;\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport {Resolve, RouterStateSnapshot, ActivatedRouteSnapshot} from '@angular/router';\r\nimport {map} from 'rxjs/operators';\r\nimport {ValueLists} from '../../core/services/value-lists.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CurrenciesListResolver implements Resolve<any> {\r\n    constructor(private valueLists: ValueLists) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<any> {\r\n        return this.valueLists.get(['currencies']).pipe(map(response => response.currencies)).toPromise();\r\n    }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {Invoice} from '@common/billing/invoices/invoice';\n\nconst BASE_URI = 'billing/invoice';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class InvoiceService {\n    constructor(private http: AppHttpClient) {\n    }\n\n    public index(params: {userId?: number} = {}): BackendResponse<{invoices: Invoice[]}> {\n        return this.http.get(`${BASE_URI}`, params);\n    }\n}\n","<material-navbar [menuPosition]=\"settings.get('vebto.navbar.defaultPosition')\"></material-navbar>\n\n<div class=\"container\">\n    <h1 trans>Your Payment History</h1>\n\n    <div class=\"material-panel\">\n        <mat-table [dataSource]=\"dataSource$ | async\" class=\"responsive-material-table\">\n            <ng-container matColumnDef=\"date\">\n                <mat-header-cell *matHeaderCellDef trans>Date</mat-header-cell>\n                <mat-cell *matCellDef=\"let invoice\" data-label=\"Date:\">{{invoice.created_at | formattedDate}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"amount\">\n                <mat-header-cell *matHeaderCellDef trans>Amount</mat-header-cell>\n                <mat-cell *matCellDef=\"let invoice\" data-label=\"Amount:\">{{invoice.subscription.plan.currency_symbol + invoice.subscription.plan.amount}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"status\">\n                <mat-header-cell *matHeaderCellDef trans>Status</mat-header-cell>\n                <mat-cell *matCellDef=\"let invoice\" data-label=\"Status:\" trans>{{invoice.paid ? 'Paid' : 'Pending'}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"invoice\">\n                <mat-header-cell *matHeaderCellDef trans>Invoice</mat-header-cell>\n                <mat-cell *matCellDef=\"let invoice\" data-label=\"Invoice:\">\n                    <a [href]=\"getInvoiceUrl(invoice)\" target=\"_blank\" trans>View</a>\n                </mat-cell>\n            </ng-container>\n\n            <mat-header-row *matHeaderRowDef=\"['date', 'amount', 'status', 'invoice']\"></mat-header-row>\n            <mat-row *matRowDef=\"let myRowData; columns: ['date', 'amount', 'status', 'invoice']\"></mat-row>\n        </mat-table>\n\n        <no-results-message *ngIf=\"!(dataSource$ | async).length && !(loading$ | async)\">\n            <span primary-text trans>Nothing To Display.</span>\n            <span secondary-text trans>You do not have any invoices yet.</span>\n        </no-results-message>\n    </div>\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {InvoiceService} from '@common/billing/invoices/invoice.service';\nimport {Invoice} from '@common/billing/invoices/invoice';\nimport {BehaviorSubject} from 'rxjs';\nimport {Settings} from '@common/core/config/settings.service';\nimport {finalize} from 'rxjs/operators';\nimport {CurrentUser} from '@common/auth/current-user';\n\n@Component({\n    selector: 'invoice-index',\n    templateUrl: './invoice-index.component.html',\n    styleUrls: ['./invoice-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InvoiceIndexComponent implements OnInit {\n    public dataSource$ = new BehaviorSubject<Invoice[]>([]);\n    public loading$ = new BehaviorSubject<boolean>(false);\n\n    constructor(\n       private invoices: InvoiceService,\n       public settings: Settings,\n       private currentUser: CurrentUser,\n    ) {}\n\n    ngOnInit() {\n        this.loading$.next(true);\n        this.invoices.index({userId: this.currentUser.get('id')})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.dataSource$.next(response.invoices);\n            });\n    }\n\n    public getInvoiceUrl(invoice: Invoice) {\n        return this.settings.getBaseUrl(true) + 'secure/billing/invoice/' + invoice.uuid;\n    }\n}\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'pricing-page',\n  templateUrl: './pricing-page.component.html',\n  styleUrls: ['./pricing-page.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PricingPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {CurrentUser} from '../../auth/current-user';\r\nimport {AppearanceListenerService} from '../../shared/appearance/appearance-listener.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class RedirectToUpgradePage implements CanActivate {\r\n    constructor(\r\n        private currentUser: CurrentUser,\r\n        private router: Router,\r\n        private listener: AppearanceListenerService,\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (this.listener.active) {\r\n            return true;\r\n        }\r\n        if (this.currentUser.isSubscribed()) {\r\n            this.router.navigate(['billing/subscription']);\r\n            return false;\r\n        } else if (this.currentUser.isLoggedIn()) {\r\n            this.router.navigate(['billing/upgrade']);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import {Route, RouterModule} from '@angular/router';\r\nimport {UpgradePageComponent} from './upgrade-page/upgrade-page.component';\r\nimport {NgModule} from '@angular/core';\r\nimport {BillingPlansResolver} from './upgrade-page/billing-plans-resolver.service';\r\nimport {UserSubscriptionPageComponent} from './subscriptions/user-subscription-page/user-subscription-page.component';\r\nimport {CurrenciesListResolver} from './upgrade-page/currencies-list-resolver.service';\r\nimport {UserSubscribedGuard} from './guards/user-subscribed-guard.service';\r\nimport {AuthGuard} from '../guards/auth-guard.service';\r\nimport {BillingEnabledGuard} from '../shared/billing/guards/billing-enabled-guard.service';\r\nimport {InvoiceIndexComponent} from '@common/billing/invoices/invoice-index/invoice-index.component';\r\nimport {CheckPermissionsGuard} from '@common/guards/check-permissions-guard.service';\r\nimport {PricingPageComponent} from '@common/billing/pricing-page/pricing-page.component';\r\nimport {RedirectToUpgradePage} from '@common/billing/guards/redirect-to-upgrade-page.service';\r\n\r\nexport const routes: Route[] = [\r\n    {\r\n        path: 'pricing',\r\n        component: PricingPageComponent,\r\n        canActivate: [RedirectToUpgradePage],\r\n        resolve: {\r\n            plans: BillingPlansResolver,\r\n            currencies: CurrenciesListResolver\r\n        }\r\n    },\r\n    {\r\n        path: '',\r\n        canActivate: [AuthGuard, CheckPermissionsGuard],\r\n        canActivateChild: [CheckPermissionsGuard],\r\n        children: [\r\n            {\r\n                path: 'upgrade',\r\n                component: UpgradePageComponent,\r\n                canActivate: [BillingEnabledGuard, AuthGuard],\r\n                resolve: {\r\n                    plans: BillingPlansResolver,\r\n                    currencies: CurrenciesListResolver\r\n                }\r\n            },\r\n            {\r\n                path: 'subscription',\r\n                component: UserSubscriptionPageComponent,\r\n                resolve: { plans: BillingPlansResolver },\r\n                canActivate: [BillingEnabledGuard, AuthGuard, UserSubscribedGuard],\r\n                data: { name: 'subscription' }\r\n            },\r\n            {\r\n                path: 'invoices',\r\n                component: InvoiceIndexComponent,\r\n                canActivate: [BillingEnabledGuard, AuthGuard, UserSubscribedGuard],\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class BillingRoutingModule {}\r\n","<upgrade-page mode=\"pricing\"></upgrade-page>","<div class=\"plans\" [class.has-recommended]=\"hasRecommendedPlan\">\r\n    <div class=\"plan\" *ngFor=\"let plan of getAllPlans(); last as last; first as first\" [class.recommended]=\"plan.recommended\" [class.last]=\"last\" [class.first]=\"first\">\r\n        <div class=\"name\">{{plan.name}}</div>\r\n        <div class=\"price-box\" *ngIf=\"!plan.free\">\r\n            <span class=\"number\">{{plan.amount | currency:plan.currency}}</span>\r\n            <span class=\"interval\"> / {{plan.interval | trans}}</span>\r\n        </div>\r\n        <div class=\"price-box\" *ngIf=\"plan.free\" trans>Free</div>\r\n        <plan-features-list [plan]=\"plan\"></plan-features-list>\r\n        <button class=\"select-plan-button\" (click)=\"selectPlan(plan)\" mat-raised-button color=\"accent\" *ngIf=\"plan.recommended\" [disabled]=\"plan.free || userSubscribedToPlan(plan)\">\r\n            {{ (userSubscribedToPlan(plan) ? 'Your Current Plan' : 'Choose Plan') | trans }}\r\n        </button>\r\n        <button class=\"select-plan-button\" (click)=\"selectPlan(plan)\" mat-stroked-button color=\"accent\" *ngIf=\"!plan.recommended\" [disabled]=\"plan.free || userSubscribedToPlan(plan)\">\r\n            {{ (userSubscribedToPlan(plan) ? 'Your Current Plan' : 'Choose Plan') | trans }}\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {SubscriptionStepperState} from '../../subscriptions/subscription-stepper-state.service';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\n\r\n@Component({\r\n    selector: 'select-plan-panel',\r\n    templateUrl: './select-plan-panel.component.html',\r\n    styleUrls: ['./select-plan-panel.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SelectPlanPanelComponent implements OnInit {\r\n    public hasRecommendedPlan = false;\r\n    @Output() selected = new EventEmitter();\r\n\r\n    constructor(\r\n        public state: SubscriptionStepperState,\r\n        public currentUser: CurrentUser,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.hasRecommendedPlan = this.state.plans.filter(plan => plan.recommended).length > 0;\r\n    }\r\n\r\n    public selectPlan(plan: Plan) {\r\n        this.state.selectInitialPlan(plan);\r\n        // fire event on next render to avoid race conditions\r\n        setTimeout(() => this.selected.emit(plan));\r\n    }\r\n\r\n    public getAllPlans() {\r\n        return this.state.plans.filter(plan => !plan.parent_id && !plan.hidden);\r\n    }\r\n\r\n    public userSubscribedToPlan(plan: Plan): boolean {\r\n        return !!this.currentUser.getSubscription({planId: plan.id});\r\n    }\r\n}\r\n","<div class=\"subscription-period-step step-container\" *ngIf=\"state.initialPlan$ | async as initialPlan\">\r\n    <div class=\"left-col\">\r\n        <div class=\"title\" trans>Select the duration of your plan. Longer plans offer better discounts!</div>\r\n        <mat-radio-group class=\"periods\" [(ngModel)]=\"state.radioGroupModel\" (change)=\"state.selectPlanById(state.radioGroupModel)\">\r\n            <div class=\"radio-button-wrapper no-label\">\r\n                <mat-radio-button [value]=\"initialPlan.id\" class=\"period\" color=\"accent\">\r\n                    <div class=\"radio-button-content\">\r\n                        <div class=\"name\">1 {{initialPlan.interval | trans}} {{ 'subscription' | trans }}:</div>\r\n                        <div class=\"price\">{{initialPlan.amount | currency:initialPlan.currency}}/{{initialPlan.interval | trans}}</div>\r\n                    </div>\r\n                </mat-radio-button>\r\n            </div>\r\n            <div class=\"radio-button-wrapper\" *ngFor=\"let plan of state.getChildPlans(initialPlan)\">\r\n                <ng-container *ngIf=\"state.selectedPlan$ | async as selectedPlan\">\r\n                    <div class=\"savings-label\">{{'Save' | trans}} {{getPlanSavings(selectedPlan.parent || selectedPlan, plan)}}%</div>\r\n                </ng-container>\r\n                <mat-radio-button [value]=\"plan.id\" class=\"period\" color=\"accent\">\r\n                    <div class=\"radio-button-content\">\r\n                        <div class=\"name\">{{plan.name | trans}}:</div>\r\n                        <div class=\"price\">{{getAmountForSingleInterval(plan) | currency:plan.currency}}/{{(plan.interval || initialPlan.interval) | trans}}</div>\r\n                    </div>\r\n                </mat-radio-button>\r\n            </div>\r\n        </mat-radio-group>\r\n\r\n        <div class=\"actions\">\r\n            <button mat-button matStepperPrevious trans>Back</button>\r\n            <button mat-raised-button color=\"accent\" (click)=\"selected.emit()\">\r\n                {{ (state.mode === 'changePlan' ? 'Change Plan' : 'Select') | trans }}\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <upgrade-page-aside *ngIf=\"showSidebar\" [plan]=\"state.selectedPlan$ | async\" class=\"right-col\"></upgrade-page-aside>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { SubscriptionStepperState } from '../../subscriptions/subscription-stepper-state.service';\r\nimport { Plan } from '@common/core/types/models/Plan';\r\n\r\n@Component({\r\n    selector: 'select-plan-period-panel',\r\n    templateUrl: './select-plan-period-panel.component.html',\r\n    styleUrls: ['./select-plan-period-panel.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SelectPlanPeriodPanelComponent {\r\n    @Input() showSidebar = false;\r\n    @Output() selected = new EventEmitter();\r\n\r\n    constructor(\r\n        public state: SubscriptionStepperState,\r\n    ) {}\r\n\r\n    public getPlanSavings(base: Plan, parent: Plan): number {\r\n        const baseAmount = this.getAmountPerDay(base);\r\n        const amount = this.getAmountPerDay(parent);\r\n        const savings = (baseAmount - amount) / baseAmount * 100;\r\n        return Math.ceil(savings);\r\n    }\r\n\r\n    private getAmountPerDay(plan: Plan) {\r\n        let days = 1;\r\n        if (plan.interval === 'week') {\r\n            days = 7;\r\n        } else if (plan.interval === 'month') {\r\n            days = 30;\r\n        } else if (plan.interval === 'year') {\r\n            days = 365;\r\n        }\r\n        days = days * plan.interval_count;\r\n        return plan.amount / days;\r\n    }\r\n\r\n    public getAmountForSingleInterval(plan: Plan) {\r\n        return plan.amount / plan.interval_count;\r\n    }\r\n}\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'contact-widget',\r\n    templateUrl: './contact-widget.component.html',\r\n    styleUrls: ['./contact-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ContactWidgetComponent {}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\r\nimport {CurrentUser} from '../../auth/current-user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserNotSubscribedGuard implements CanActivate, CanActivateChild {\r\n\r\n    constructor(private currentUser: CurrentUser, private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    private handle() {\r\n        if ( ! this.currentUser.isSubscribed()) { return true; }\r\n\r\n        this.router.navigate(['/billing/subscription']);\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { UpgradePageComponent } from './upgrade-page/upgrade-page.component';\r\nimport { BillingPlansResolver } from './upgrade-page/billing-plans-resolver.service';\r\nimport { BillingRoutingModule } from './billing-routing.module';\r\nimport { PlanFeaturesListComponent } from './upgrade-page/plan-features-list/plan-features-list.component';\r\nimport { OrderSummaryComponent } from './upgrade-page/order-summary/order-summary.component';\r\nimport { AcceptedPaymentsHeaderComponent } from './upgrade-page/accepted-payments-header/accepted-payments-header.component';\r\nimport { UserSubscriptionPageComponent } from './subscriptions/user-subscription-page/user-subscription-page.component';\r\nimport { UpgradePageAsideComponent } from './upgrade-page/upgrade-page-aside/upgrade-page-aside.component';\r\nimport { CurrenciesListResolver } from './upgrade-page/currencies-list-resolver.service';\r\nimport { CreditCardFormComponent } from './credit-card-form/credit-card-form.component';\r\nimport { PaypalSubscriptions } from './subscriptions/paypal-subscriptions';\r\nimport { SelectPlanPanelComponent } from './plans/select-plan-panel/select-plan-panel.component';\r\nimport { SelectPlanPeriodPanelComponent } from './plans/select-plan-period-panel/select-plan-period-panel.component';\r\nimport { SubscriptionStepperState } from './subscriptions/subscription-stepper-state.service';\r\nimport { UserNotSubscribedGuard } from './guards/user-not-subscribed-guard.service';\r\nimport { UserSubscribedGuard } from './guards/user-subscribed-guard.service';\r\nimport { CreateSubscriptionPanelComponent } from './subscriptions/create-subscription-panel/create-subscription-panel.component';\r\nimport { ContactWidgetComponent } from './upgrade-page/contact-widget/contact-widget.component';\r\nimport { FullPlanNameModule } from '../shared/billing/full-plan-name/full-plan-name.module';\r\nimport { InvoiceIndexComponent } from '@common/billing/invoices/invoice-index/invoice-index.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { PricingPageComponent } from './pricing-page/pricing-page.component';\r\nimport { MaterialNavbarModule } from '@common/core/ui/material-navbar/material-navbar.module';\r\nimport { TranslationsModule } from '@common/core/translations/translations.module';\r\nimport { FormatPipesModule } from '@common/core/ui/format-pipes/format-pipes.module';\r\nimport { NoResultsMessageModule } from '@common/core/ui/no-results-message/no-results-message.module';\r\nimport { LoadingIndicatorModule } from '@common/core/ui/loading-indicator/loading-indicator.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MaterialNavbarModule,\r\n        BillingRoutingModule,\r\n        FullPlanNameModule,\r\n        TranslationsModule,\r\n        FormatPipesModule,\r\n        NoResultsMessageModule,\r\n        LoadingIndicatorModule,\r\n\r\n        // material\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatSnackBarModule,\r\n        MatCheckboxModule,\r\n        MatTooltipModule,\r\n        MatDialogModule,\r\n        MatStepperModule,\r\n        MatProgressBarModule,\r\n        MatTabsModule,\r\n        MatRadioModule,\r\n        MatTableModule,\r\n    ],\r\n    declarations: [\r\n        UpgradePageComponent,\r\n        PlanFeaturesListComponent,\r\n        OrderSummaryComponent,\r\n        AcceptedPaymentsHeaderComponent,\r\n        UserSubscriptionPageComponent,\r\n        UpgradePageAsideComponent,\r\n        CreditCardFormComponent,\r\n        CreateSubscriptionPanelComponent,\r\n        SelectPlanPanelComponent,\r\n        SelectPlanPeriodPanelComponent,\r\n        ContactWidgetComponent,\r\n        InvoiceIndexComponent,\r\n        PricingPageComponent,\r\n    ],\r\n    providers: [\r\n        BillingPlansResolver,\r\n        CurrenciesListResolver,\r\n        PaypalSubscriptions,\r\n        SubscriptionStepperState,\r\n        SubscriptionStepperState,\r\n        UserNotSubscribedGuard,\r\n        UserSubscribedGuard,\r\n    ],\r\n    exports: [\r\n        BillingRoutingModule,\r\n    ]\r\n})\r\nexport class BillingModule {\r\n}\r\n","<mat-icon svgIcon=\"question-answer\" class=\"icon\"></mat-icon>\r\n\r\n<div class=\"title\" trans>Do you have any questions about PRO accounts?</div>\r\n<div class=\"subtitle\" trans>Our support team will be happy to assist you.</div>\r\n<a mat-raised-button color=\"accent\" target=\"_blank\" routerLink=\"/contact\" trans>Contact Us</a>"]}